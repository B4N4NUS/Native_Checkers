{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dialog from \"react-native-dialog\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    visible = _useState2[0],\n    setVisible = _useState2[1];\n  var showDialog = function showDialog() {\n    setVisible(true);\n  };\n  var handleCancel = function handleCancel() {\n    setVisible(false);\n  };\n  var handleDelete = function handleDelete() {\n    setVisible(false);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Button, {\n      title: \"Show dialog\",\n      onPress: showDialog\n    }), _jsxs(Dialog.Container, {\n      visible: visible,\n      children: [_jsx(Dialog.Title, {\n        children: \"Account delete\"\n      }), _jsx(Dialog.Description, {\n        children: \"Do you want to delete this account? You cannot undo this action.\"\n      }), _jsx(Dialog.Button, {\n        label: \"Cancel\",\n        onPress: handleCancel\n      }), _jsx(Dialog.Button, {\n        label: \"Delete\",\n        onPress: handleDelete\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"names":["React","useState","Dialog","App","visible","setVisible","showDialog","handleCancel","handleDelete","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/mikha/Desktop/checkers/App.js"],"sourcesContent":["\n// import { StyleSheet, Text, View, Button, TouchableOpacity } from 'react-native';\n// import { Game } from './Game'\n// import React from 'react'\n// import { NavigationContainer } from '@react-navigation/native';\n// import { createNativeStackNavigator } from '@react-navigation/native-stack';\n// import { LinearGradient } from 'expo-linear-gradient'\n// // import {Background} from './background.jsx'\n\n// // import AnimatedLinearGradient, {presetColors} from 'react-native-animated-linear-gradient'\n// // import {LinearGradient} from 'expo-linear-gradient';\n\n\n// function HomeScreen({ navigation }) {\n  \n//   return (\n//     <LinearGradient start={{ x: 0, y: 0.75 }} end={{ x: 1, y: 0.25 }} colors={['#1FA2FF', '#12D8FA', '#A6FFCB']} style={{ flex: 1, alignItems: 'center', justifyContent: 'center', }}>\n//       <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('4 Players Local')}>\n//         <Text style={styles.text}>\n//           4 Players Local\n//         </Text>\n//       </TouchableOpacity>\n\n//       <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('4 Players Online')}>\n//         <Text style={styles.text}>\n//           4 Players Online\n//         </Text>\n//       </TouchableOpacity>\n\n//       <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('2 Players Local')}>\n//         <Text style={styles.text}>\n//           2 Players Local\n//         </Text>\n//       </TouchableOpacity>\n\n//       <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Mann')}>\n//         <Text style={styles.text}>\n//           Mann vs. Machine\n//         </Text>\n//       </TouchableOpacity>\n//     </LinearGradient>\n//   );\n// }\n\n// function PlayGame4PL({ navigation }) {\n//   // navigation.setOptions({\n//   //   headerShown: true,\n//   //   headerTransparent: true,\n//   // });\n//   return (\n//     <LinearGradient start={{ x: 0, y: 0.75 }} end={{ x: 1, y: 0.25 }} colors={['#1FA2FF', '#12D8FA', '#A6FFCB']} style={{ flex: 1, alignItems: 'center', justifyContent: 'center', }}>\n//       {/* <AnimatedLinearGradient customColors={presetColors.instagram} speed={4000}/> */}\n//       <Game mode={'4PL'} />\n//     </LinearGradient>\n//   );\n// }\n// function PlayGame2PL({ navigation }) {\n  \n//   return (\n//     <LinearGradient start={{ x: 0, y: 0.75 }} end={{ x: 1, y: 0.25 }} colors={['#1FA2FF', '#12D8FA', '#A6FFCB']} style={{ flex: 1, alignItems: 'center', justifyContent: 'center', }}>\n//       <Game mode={'2PL'} />\n//     </LinearGradient>\n//   );\n// }\n// function PlayGameMann({ navigation }) {\n//   return (\n//     <LinearGradient start={{ x: 0, y: 0.75 }} end={{ x: 1, y: 0.25 }} colors={['#1FA2FF', '#12D8FA', '#A6FFCB']} style={{ flex: 1, alignItems: 'center', justifyContent: 'center', }}>\n//       <Game mode={'Mann'} />\n//     </LinearGradient>\n//   );\n// }\n// function PlayGame4PO({ navigation }) {\n//   return (\n//     <LinearGradient start={{ x: 0, y: 0.75 }} end={{ x: 1, y: 0.25 }} colors={['#1FA2FF', '#12D8FA', '#A6FFCB']} style={{ flex: 1, alignItems: 'center', justifyContent: 'center', }}>\n//       <Game mode={'4PO'} />\n//     </LinearGradient>\n//   );\n// }\n\n// const Stack = createNativeStackNavigator();\n\n// export default function App() {\n//   return (\n//     <NavigationContainer>\n//       <Stack.Navigator initialRouteName=\"Home\">\n//         <Stack.Screen name=\"Home\" component={HomeScreen}/>\n//         <Stack.Screen name=\"4 Players Local\" component={PlayGame4PL} options={{headerTransparent: true,}} />\n//         <Stack.Screen name=\"2 Players Local\" component={PlayGame2PL} options={{headerTransparent: true,}} />\n//         <Stack.Screen name=\"4 Players Online\" component={PlayGame4PO} options={{headerTransparent: true,}} />\n//         <Stack.Screen name=\"Mann\" component={PlayGameMann} options={{headerTransparent: true,}} />\n//       </Stack.Navigator>\n//     </NavigationContainer>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   // background: {\n//   //   background: [linearGradient(\"135deg\", hsla(\"224\", \"75%,\", \"45%\", \"1\"), \"0%\", hsla(\"324\", \"75%\", \"45%\", \"1\"), \"100%\")]\n//   // },\n//   linearGradient: {\n//     flex: 1,\n//     paddingLeft: 15,\n//     paddingRight: 15,\n//     borderRadius: 5\n//   },\n//   buttonText: {\n//     fontSize: 18,\n//     fontFamily: 'Gill Sans',\n//     textAlign: 'center',\n//     margin: 10,\n//     color: '#ffffff',\n//     backgroundColor: 'transparent',\n//   },\n//   turnBackground: {\n//     position: 'absolute',\n//     width: 425,\n//     height: 425,\n//     margin: 0\n//   },\n//   button: {\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     margin: 10,\n//     paddingVertical: 12,\n//     paddingHorizontal: 28,\n//     borderRadius: 4,\n//     elevation: 3,\n//     backgroundColor: 'black',\n//   },\n//   imageButton: {\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     margin: 10,\n//     padding: 5,\n//     borderRadius: 4,\n//     elevation: 3,\n//     backgroundColor: 'black',\n//   },\n//   text: {\n//     fontSize: 16,\n//     lineHeight: 21,\n//     fontWeight: 'bold',\n//     letterSpacing: 0.25,\n//     color: 'white',\n//   },\n//   container: {\n//     margin: 0,\n//     flex: 1,\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     backgroundColor: 'linear-gradient(to bottom, #6be569, #6d92d2)',\n//   },\n//   linearGradient: {\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     borderRadius: 5,\n//     height: 500,\n//     width: 500,\n//   },\n// });\n\nimport React, { useState } from \"react\";\nimport { Button, StyleSheet, View } from \"react-native\";\nimport Dialog from \"react-native-dialog\";\n\nexport default function App() {\n  const [visible, setVisible] = useState(false);\n\n  const showDialog = () => {\n    setVisible(true);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  const handleDelete = () => {\n    // The user has pressed the \"Delete\" button, so here you can do your own logic.\n    // ...Your logic\n    setVisible(false);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Button title=\"Show dialog\" onPress={showDialog} />\n      <Dialog.Container visible={visible}>\n        <Dialog.Title>Account delete</Dialog.Title>\n        <Dialog.Description>\n          Do you want to delete this account? You cannot undo this action.\n        </Dialog.Description>\n        <Dialog.Button label=\"Cancel\" onPress={handleCancel} />\n        <Dialog.Button label=\"Delete\" onPress={handleDelete} />\n      </Dialog.Container>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});"],"mappings":";AAiKA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAExC,OAAOC,MAAM,MAAM,qBAAqB;AAAC;AAAA;AAEzC,eAAe,SAASC,GAAG,GAAG;EAC5B,gBAA8BF,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAtCG,OAAO;IAAEC,UAAU;EAE1B,IAAMC,UAAU,GAAG,SAAbA,UAAU,GAAS;IACvBD,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,IAAME,YAAY,GAAG,SAAfA,YAAY,GAAS;IACzBF,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,IAAMG,YAAY,GAAG,SAAfA,YAAY,GAAS;IAGzBH,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,OACE,MAAC,IAAI;IAAC,KAAK,EAAEI,MAAM,CAACC,SAAU;IAAA,WAC5B,KAAC,MAAM;MAAC,KAAK,EAAC,aAAa;MAAC,OAAO,EAAEJ;IAAW,EAAG,EACnD,MAAC,MAAM,CAAC,SAAS;MAAC,OAAO,EAAEF,OAAQ;MAAA,WACjC,KAAC,MAAM,CAAC,KAAK;QAAA,UAAC;MAAc,EAAe,EAC3C,KAAC,MAAM,CAAC,WAAW;QAAA,UAAC;MAEpB,EAAqB,EACrB,KAAC,MAAM,CAAC,MAAM;QAAC,KAAK,EAAC,QAAQ;QAAC,OAAO,EAAEG;MAAa,EAAG,EACvD,KAAC,MAAM,CAAC,MAAM;QAAC,KAAK,EAAC,QAAQ;QAAC,OAAO,EAAEC;MAAa,EAAG;IAAA,EACtC;EAAA,EACd;AAEX;AAEA,IAAMC,MAAM,GAAGE,UAAU,CAACC,MAAM,CAAC;EAC/BF,SAAS,EAAE;IACTG,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}