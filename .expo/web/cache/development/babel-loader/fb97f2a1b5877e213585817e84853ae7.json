{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React from 'react';\nimport { Board } from \"./Board\";\nimport { Button } from 'react-native-elements';\nimport { Manager, io } from \"socket.io-client\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Game = function (_React$Component) {\n  _inherits(Game, _React$Component);\n  var _super = _createSuper(Game);\n  function Game(props) {\n    var _this;\n    _classCallCheck(this, Game);\n    _this = _super.call(this, props);\n    _this.playerNames = ['D', 'N', 'S', 'M'];\n    _this.socket = io();\n    var _io = require('socket.io-client');\n    var socket = _io.connect('http://localhost:3000');\n    socket.on('connect', function () {\n      console.log('Connected!');\n      socket.on(\"new-table\", function (data) {\n        console.log(data);\n        _this.setState({\n          squares: data.squares,\n          currentPlayer: data.currentPlayer,\n          dead: data.dead,\n          handling: data.handling,\n          currentActiveCell: data.currentActiveCell,\n          currentCheck: data.currentCheck,\n          lock: data.lock\n        });\n      });\n    });\n    socket.on('chat message', function (msg) {\n      var item = document.createElement('li');\n      item.textContent = msg;\n      messages.appendChild(item);\n      window.scrollTo(0, document.body.scrollHeight);\n      console.log(msg);\n    });\n    var squaress = [];\n    var dead = [];\n    var connectToServer = false;\n    if (props.mode) {\n      switch (props.mode) {\n        case '4PL':\n          {\n            squaress = ['D', 'D', 'D', 'N', 'N', 'N', 'D', 'D', null, null, 'N', 'N', 'D', null, null, null, null, 'N', 'M', null, null, null, null, 'S', 'M', 'M', null, null, 'S', 'S', 'M', 'M', 'M', 'S', 'S', 'S'];\n            dead = [false, false, false, false];\n            break;\n          }\n        case '4PO':\n          {\n            squaress = ['D', 'D', 'D', 'N', 'N', 'N', 'D', 'D', null, null, 'N', 'N', 'D', null, null, null, null, 'N', 'M', null, null, null, null, 'S', 'M', 'M', null, null, 'S', 'S', 'M', 'M', 'M', 'S', 'S', 'S'];\n            dead = [false, false, false, false];\n            connectToServer = true;\n            break;\n          }\n        case '2PL':\n          {\n            squaress = ['D', 'D', 'D', null, null, null, 'D', 'D', null, null, null, null, 'D', null, null, null, null, null, null, null, null, null, null, 'S', null, null, null, null, 'S', 'S', null, null, null, 'S', 'S', 'S'];\n            dead = [false, true, false, true];\n            break;\n          }\n      }\n    }\n    _this.state = {\n      squares: squaress,\n      dead: dead,\n      squaresDefault: _toConsumableArray(squaress),\n      deadDefault: dead,\n      handling: false,\n      currentPlayer: 0,\n      currentActiveCell: null,\n      currentCheck: 'D',\n      lock: false,\n      online: connectToServer,\n      socket: socket\n    };\n    return _this;\n  }\n  _createClass(Game, [{\n    key: \"logEverything\",\n    value: function logEverything() {\n      this.state.socket.emit(\"new-table\", {\n        \"squares\": this.state.squares,\n        \"currentPlayer\": this.state.currentPlayer,\n        \"dead\": this.state.dead,\n        \"handling\": this.state.handling,\n        \"currentActiveCell\": this.state.currentActiveCell,\n        \"currentCheck\": this.state.currentCheck,\n        \"lock\": this.state.lock\n      });\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var _this2 = this;\n      this.setState({\n        squares: _toConsumableArray(this.state.squaresDefault),\n        dead: _toConsumableArray(this.state.deadDefault),\n        handling: false,\n        currentPlayer: 0,\n        currentActiveCell: null,\n        currentCheck: 'D',\n        lock: false\n      }, function () {\n        return _this2.logEverything();\n      });\n      this.logEverything();\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(i) {\n      var _this3 = this;\n      var squares = this.state.squares;\n      if (!squares[i]) {\n        return;\n      }\n      if (squares[i].charAt(0) === this.playerNames[this.state.currentPlayer % 4] && !this.state.handling) {\n        this.setState({\n          currentCheck: squares[i]\n        }, function () {\n          return _this3.logEverything();\n        });\n        squares[i] = squares[i].toLocaleLowerCase();\n        squares = this.checkMovement(squares, i, false);\n        this.setState({\n          currentActiveCell: i,\n          handling: true,\n          squares: squares\n        }, function () {\n          return _this3.logEverything();\n        });\n      } else {\n        if (!this.state.lock && this.state.handling && squares[i].charAt(0) === squares[this.state.currentActiveCell].charAt(0).toUpperCase()) {\n          squares = this.reverseSelection(squares);\n          this.setState({\n            currentActiveCell: i,\n            currentCheck: squares[i],\n            handling: true,\n            squares: squares\n          }, function () {\n            return _this3.logEverything();\n          });\n          squares[i] = squares[i].toLocaleLowerCase();\n          squares = this.checkMovement(squares, i, false);\n        }\n      }\n      if (this.state.handling && squares[i] === 'v') {\n        squares[i] = this.state.currentCheck;\n        var resume = false;\n        if (this.state.currentActiveCell % 6 < i % 6 && Math.abs(this.state.currentActiveCell - i) > 1) {\n          squares[i - 1] = null;\n          resume = true;\n        }\n        if (Math.floor(this.state.currentActiveCell / 6) < Math.floor(i / 6) && this.state.currentActiveCell % 6 === i % 6 && Math.abs(this.state.currentActiveCell - i) > 6) {\n          squares[i - 6] = null;\n          resume = true;\n        }\n        if (this.state.currentActiveCell % 6 > i % 6 && Math.abs(this.state.currentActiveCell - i) > 1) {\n          squares[i + 1] = null;\n          resume = true;\n        }\n        if (Math.floor(this.state.currentActiveCell / 6) > Math.floor(i / 6) && this.state.currentActiveCell % 6 === i % 6 && Math.abs(this.state.currentActiveCell - i) > 6) {\n          squares[i + 6] = null;\n          resume = true;\n        }\n        squares = this.makeQueen(this.validate(squares), i);\n        this.setState({\n          squares: squares,\n          handling: false,\n          lock: false\n        }, function () {\n          return _this3.logEverything();\n        });\n        if (resume && this.canResume(squares, i, this.state.currentCheck)) {\n          squares = this.checkMovement(squares, i, true);\n          this.setState({\n            currentCheck: squares[i]\n          });\n          squares[i] = squares[i].toLocaleLowerCase();\n          this.setState({\n            squares: squares,\n            currentPlayer: this.state.currentPlayer,\n            handling: true,\n            currentActiveCell: i,\n            lock: true\n          }, function () {\n            return _this3.logEverything();\n          });\n        } else {\n          this.chechAlive(squares);\n          this.setState({\n            squares: this.skipTurn(squares)\n          }, function () {\n            return _this3.logEverything();\n          });\n        }\n      }\n    }\n  }, {\n    key: \"chechAlive\",\n    value: function chechAlive(squares) {\n      var _this4 = this;\n      var ded = this.state.dead;\n      for (var p = 0; p < 4; p++) {\n        var playerDead = true;\n        for (var i = 0; i < 36; i++) {\n          if (squares[i] && squares[i].charAt(0).toUpperCase() === this.playerNames[p]) {\n            playerDead = false;\n          }\n        }\n        ded[p] = playerDead;\n      }\n      this.setState({\n        dead: ded\n      }, function () {\n        return _this4.logEverything();\n      });\n    }\n  }, {\n    key: \"makeQueen\",\n    value: function makeQueen(squares, i) {\n      if (this.state.currentCheck.length !== 1) {\n        return squares;\n      }\n      switch (this.state.currentCheck) {\n        case this.playerNames[0]:\n          {\n            if (i == 35) {\n              squares[35] = this.state.currentCheck + \"Q\";\n            }\n            break;\n          }\n        case this.playerNames[1]:\n          {\n            if (i == 30) {\n              squares[30] = this.state.currentCheck + \"Q\";\n            }\n            break;\n          }\n        case this.playerNames[2]:\n          {\n            if (i == 0) {\n              squares[0] = this.state.currentCheck + \"Q\";\n            }\n            break;\n          }\n        case this.playerNames[3]:\n          {\n            if (i == 5) {\n              squares[5] = this.state.currentCheck + \"Q\";\n            }\n            break;\n          }\n      }\n      return squares;\n    }\n  }, {\n    key: \"canResume\",\n    value: function canResume(squares, i, check) {\n      var left = true,\n        right = true,\n        up = true,\n        down = true;\n      if (i < 5) {\n        up = false;\n      }\n      if (i > 28) {\n        down = false;\n      }\n      if (i % 6 < 2) {\n        left = false;\n      }\n      if (i % 6 > 3) {\n        right = false;\n      }\n      if (!(up && squares[i - 6] && squares[i - 6].charAt(0) !== check.charAt(0) && squares[i - 12] === null)) {\n        up = false;\n      }\n      if (!(down && squares[i + 6] && squares[i + 6].charAt(0) !== check.charAt(0) && squares[i + 12] === null)) {\n        down = false;\n      }\n      if (!(left && squares[i - 1] && squares[i - 1].charAt(0) !== check.charAt(0) && squares[i - 2] === null)) {\n        left = false;\n      }\n      if (!(right && squares[i + 1] && squares[i + 1].charAt(0) !== check.charAt(0) && squares[i + 2] === null)) {\n        right = false;\n      }\n      return up || down || right || left;\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(squares) {\n      return squares.map(function (x) {\n        return x ? x !== x.toLocaleLowerCase() ? x : null : null;\n      });\n    }\n  }, {\n    key: \"giveUp\",\n    value: function giveUp() {\n      var _this5 = this;\n      var ded = this.state.dead;\n      ded[this.state.currentPlayer % 4] = true;\n      this.setState({\n        dead: ded\n      }, function () {\n        return _this5.logEverything();\n      });\n      this.skipTurn();\n    }\n  }, {\n    key: \"skipTurn\",\n    value: function skipTurn(squares) {\n      var _this6 = this;\n      var turn = this.state.currentPlayer;\n      var winner = false;\n      for (var i = 1; i < 4; i++) {\n        if (!this.state.dead[(this.state.currentPlayer + i) % 4]) {\n          turn = i + this.state.currentPlayer;\n          break;\n        }\n      }\n      if (turn === this.state.currentPlayer) {\n        alert(\"Winner\");\n      }\n      this.setState({\n        currentPlayer: turn\n      }, function () {\n        return _this6.logEverything();\n      });\n      if (squares) {\n        return this.reverseSelection(squares);\n      } else {\n        this.setState({\n          handling: false,\n          squares: this.validate(this.reverseSelection(this.state.squares))\n        }, function () {\n          return _this6.logEverything();\n        });\n      }\n    }\n  }, {\n    key: \"reverseSelection\",\n    value: function reverseSelection(squares) {\n      return squares.map(function (x) {\n        return x ? x.toUpperCase() : null;\n      }).map(function (x) {\n        return x === 'V' ? null : x;\n      });\n    }\n  }, {\n    key: \"checkMovement\",\n    value: function checkMovement(squares, i, lock) {\n      var check = squares[i].toUpperCase();\n      if (check.endsWith('Q')) {\n        for (var q = i - 1; q >= Math.floor(i / 6) * 6; q--) {\n          if (squares[q] !== null) {\n            if (squares[q].charAt(0) !== check.charAt(0) && squares[q - 1] === null && q !== Math.floor(i % 6) * 6) {\n              squares[q - 1] = 'v';\n            }\n            break;\n          } else {\n            squares[q] = 'v';\n          }\n        }\n        for (var _q = i + 1; _q <= Math.floor(i / 6) * 6 + 5; _q++) {\n          if (squares[_q] !== null) {\n            if (squares[_q].charAt(0) !== check.charAt(0) && squares[_q + 1] === null && _q !== Math.floor(i % 6) * 6 + 5) {\n              squares[_q + 1] = 'v';\n            }\n            break;\n          } else {\n            squares[_q] = 'v';\n          }\n        }\n        for (var _q2 = i - 6; _q2 > 0; _q2 -= 6) {\n          if (squares[_q2] !== null) {\n            if (squares[_q2].charAt(0) !== check.charAt(0) && squares[_q2 - 6] === null && _q2 !== i % 6) {\n              squares[_q2 - 6] = 'v';\n            }\n            break;\n          } else {\n            squares[_q2] = 'v';\n          }\n        }\n        for (var _q3 = i + 6; _q3 < 36; _q3 += 6) {\n          if (squares[_q3] !== null) {\n            if (squares[_q3].charAt(0) !== check.charAt(0) && squares[_q3 + 6] === null && _q3 !== 30 + i % 6) {\n              squares[_q3 + 6] = 'v';\n            }\n            break;\n          } else {\n            squares[_q3] = 'v';\n          }\n        }\n      } else {\n        if (squares[i + 1]) {\n          if (squares[i + 2] === null && check.charAt(0) !== squares[i + 1].charAt(0) && Math.floor((i + 2) / 6) === Math.floor(i / 6)) {\n            squares[i + 2] = 'v';\n          }\n        } else {\n          if (!lock && i < 35 && Math.floor((i + 1) / 6) === Math.floor(i / 6) && (this.state.currentPlayer % 4 === 0 || this.state.currentPlayer % 4 === 3)) squares[i + 1] = 'v';\n        }\n        if (squares[i + 6]) {\n          if (squares[i + 12] === null && check.charAt(0) !== squares[i + 6].charAt(0) && i + 6 < 30 && i + 6 > 5) {\n            squares[i + 12] = 'v';\n          }\n        } else {\n          if (!lock && i < 30 && (this.state.currentPlayer % 4 === 0 || this.state.currentPlayer % 4 === 1)) squares[i + 6] = 'v';\n        }\n        if (squares[i - 1]) {\n          if (squares[i - 2] === null && check.charAt(0) !== squares[i - 1].charAt(0) && Math.floor((i - 2) / 6) === Math.floor(i / 6)) {\n            squares[i - 2] = 'v';\n          }\n        } else {\n          if (!lock && i > 0 && Math.floor((i - 1) / 6) === Math.floor(i / 6) && (this.state.currentPlayer % 4 === 1 || this.state.currentPlayer % 4 === 2)) squares[i - 1] = 'v';\n        }\n        if (squares[i - 6]) {\n          if (squares[i - 12] === null && check.charAt(0) !== squares[i - 6].charAt(0) && i - 6 < 30 && i - 6 > 5) {\n            squares[i - 12] = 'v';\n          }\n        } else {\n          if (!lock && i > 5 && (this.state.currentPlayer % 4 === 2 || this.state.currentPlayer % 4 === 3)) squares[i - 6] = 'v';\n        }\n      }\n      return squares;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n      return _jsxs(_Fragment, {\n        children: [_jsxs(View, {\n          className: \"game-board\",\n          children: [setBackground(this.state.currentPlayer), _jsx(Board, {\n            squares: this.state.squares,\n            onClick: function onClick(i) {\n              return _this7.handleClick(i);\n            }\n          })]\n        }), _jsxs(View, {\n          className: \"game-info\",\n          style: {\n            flexDirection: 'row'\n          },\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this7.giveUp();\n            },\n            style: styles.button,\n            children: _jsx(Text, {\n              style: styles.text,\n              children: \"Quit Game\"\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this7.skipTurn(null);\n            },\n            style: styles.button,\n            children: _jsx(Text, {\n              style: styles.text,\n              children: \"Skip Turn\"\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this7.reset();\n            },\n            style: styles.imageButton,\n            children: _jsx(Image, {\n              style: {\n                flex: 1,\n                alignContent: 'center',\n                width: 40,\n                height: undefined,\n                resizeMode: 'contain'\n              },\n              source: require(\"./refresh.png\")\n            })\n          })]\n        })]\n      });\n    }\n  }]);\n  return Game;\n}(React.Component);\nfunction setBackground(params) {\n  switch (params % 4) {\n    case 0:\n      return _jsx(View, {\n        style: [styles.turnBackground, {\n          backgroundColor: 'rgba(255,255,255,1)'\n        }]\n      });\n    case 1:\n      return _jsx(View, {\n        style: [styles.turnBackground, {\n          backgroundColor: 'rgba(255,0,0,1)'\n        }]\n      });\n    case 2:\n      return _jsx(View, {\n        style: [styles.turnBackground, {\n          backgroundColor: 'rgba(0,255,0,1)'\n        }]\n      });\n    case 3:\n      return _jsx(View, {\n        style: [styles.turnBackground, {\n          backgroundColor: 'rgba(50,50,50,1)'\n        }]\n      });\n    default:\n      return _jsx(View, {});\n  }\n  return _jsx(View, {\n    style: {\n      position: 'absolute',\n      width: '400px',\n      height: '400px',\n      margin: '0px',\n      backgroundColor: {}\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  turnBackground: {\n    position: 'absolute',\n    width: 425,\n    height: 425,\n    margin: 0\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 10,\n    paddingVertical: 12,\n    paddingHorizontal: 28,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: 'black'\n  },\n  imageButton: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 10,\n    padding: 5,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: 'black'\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white'\n  }\n});","map":{"version":3,"names":["React","Board","Button","Manager","io","Game","props","playerNames","socket","require","connect","on","console","log","data","setState","squares","currentPlayer","dead","handling","currentActiveCell","currentCheck","lock","msg","item","document","createElement","textContent","messages","appendChild","window","scrollTo","body","scrollHeight","squaress","connectToServer","mode","state","squaresDefault","deadDefault","online","emit","logEverything","i","charAt","toLocaleLowerCase","checkMovement","toUpperCase","reverseSelection","resume","Math","abs","floor","makeQueen","validate","canResume","chechAlive","skipTurn","ded","p","playerDead","length","check","left","right","up","down","map","x","turn","winner","alert","endsWith","q","setBackground","handleClick","flexDirection","giveUp","styles","button","text","reset","imageButton","flex","alignContent","width","height","undefined","resizeMode","Component","params","turnBackground","backgroundColor","position","margin","StyleSheet","create","alignItems","justifyContent","paddingVertical","paddingHorizontal","borderRadius","elevation","padding","fontSize","lineHeight","fontWeight","letterSpacing","color"],"sources":["C:/Users/mikha/Desktop/checkers/Game.jsx"],"sourcesContent":["import { StyleSheet, Text, View, TouchableOpacity, Image } from 'react-native';\r\nimport React from 'react';\r\nimport { Board } from './Board'\r\nimport { Button } from 'react-native-elements';\r\nimport { Manager, io } from \"socket.io-client\";\r\n\r\n\r\n// import { NavigationContainer } from '@react-navigation/native';\r\n// import { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n// import { useNavigation } from '@react-navigation/native';\r\n\r\n\r\nexport class Game extends React.Component {\r\n  // Имена игроков по часовой стрелке\r\n  playerNames = ['D', 'N', 'S', 'M']\r\n  // socket = io.connect(\"http://localhost:3000\")\r\n  socket = io()\r\n\r\n  logEverything() {\r\n    this.state.socket.emit(\"new-table\", {\r\n      \"squares\":this.state.squares,\r\n      \"currentPlayer\":this.state.currentPlayer,\r\n      \"dead\": this.state.dead,\r\n      \"handling\": this.state.handling,\r\n      \"currentActiveCell\": this.state.currentActiveCell,\r\n      \"currentCheck\": this.state.currentCheck,\r\n      \"lock\": this.state.lock,\r\n    })\r\n  }\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var io = require('socket.io-client');\r\n    var socket = io.connect('http://localhost:3000');\r\n\r\n    socket.on('connect', () =>  {\r\n      console.log('Connected!');\r\n\r\n      socket.on(\"new-table\", (data) => {\r\n        console.log(data)\r\n        this.setState({\r\n            squares:data.squares,\r\n            currentPlayer:data.currentPlayer,\r\n            dead: data.dead,\r\n            handling: data.handling,\r\n            currentActiveCell: data.currentActiveCell,\r\n            currentCheck: data.currentCheck,\r\n            lock: data.lock,\r\n        })\r\n      })\r\n\r\n    });\r\n\r\n    socket.on('chat message', function (msg) {\r\n      var item = document.createElement('li');\r\n      item.textContent = msg;\r\n      messages.appendChild(item);\r\n      window.scrollTo(0, document.body.scrollHeight);\r\n      console.log(msg)\r\n    });\r\n\r\n    // manager.open((err) => {\r\n    //   if (err) {\r\n    //     console.log(\"ERROR\")\r\n    //   } else {\r\n    //     console.log(\"SUCCESS\")\r\n    //   }\r\n    // });\r\n    let squaress = []\r\n    let dead = []\r\n    let connectToServer = false\r\n\r\n    if (props.mode) {\r\n      switch (props.mode) {\r\n        case '4PL': {\r\n          squaress = [\r\n            'D', 'D', 'D', 'N', 'N', 'N',\r\n            'D', 'D', null, null, 'N', 'N',\r\n            'D', null, null, null, null, 'N',\r\n            'M', null, null, null, null, 'S',\r\n            'M', 'M', null, null, 'S', 'S',\r\n            'M', 'M', 'M', 'S', 'S', 'S',\r\n          ]\r\n          dead = [false, false, false, false]\r\n          break\r\n        }\r\n        case '4PO': {\r\n          squaress = [\r\n            'D', 'D', 'D', 'N', 'N', 'N',\r\n            'D', 'D', null, null, 'N', 'N',\r\n            'D', null, null, null, null, 'N',\r\n            'M', null, null, null, null, 'S',\r\n            'M', 'M', null, null, 'S', 'S',\r\n            'M', 'M', 'M', 'S', 'S', 'S',\r\n          ]\r\n          dead = [false, false, false, false]\r\n          connectToServer = true\r\n          break\r\n        }\r\n        case '2PL': {\r\n          squaress = [\r\n            'D', 'D', 'D', null, null, null,\r\n            'D', 'D', null, null, null, null,\r\n            'D', null, null, null, null, null,\r\n            null, null, null, null, null, 'S',\r\n            null, null, null, null, 'S', 'S',\r\n            null, null, null, 'S', 'S', 'S',\r\n          ]\r\n          dead = [false, true, false, true]\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n    this.state = {\r\n\r\n\r\n      // [\r\n      // 'D', 'D', 'D', 'N', 'N', 'N',\r\n      // 'D', 'D', null, null, 'N', 'N',\r\n      // 'D', null, null, null, null, 'N',\r\n      // 'M', null, null, null, null, 'S',\r\n      // 'M', 'M', null, null, 'S', 'S',\r\n      // 'M', 'M', 'M', 'S', 'S', 'S',\r\n\r\n      //   'D', null, null, null, null, 'N',\r\n      //   'D', null, null, null, null, 'N',\r\n      //   null, 'DQ', null, null, 'S', null,\r\n      //   'M', null, null, 'DQ', null, null,\r\n      //   null, 'M', null, null, 'DQ', 'S',\r\n      //   null, null, null, null, 'D', null,\r\n      // ],\r\n      squares: squaress,\r\n      dead: dead,\r\n      squaresDefault: [...squaress],\r\n      deadDefault: dead,\r\n      handling: false,\r\n      currentPlayer: 0,\r\n      currentActiveCell: null,\r\n      currentCheck: 'D',\r\n      lock: false,\r\n      online: connectToServer,\r\n      socket: socket\r\n    };\r\n  }\r\n\r\n  reset() {\r\n    this.setState({\r\n      squares: [...this.state.squaresDefault],\r\n      dead: [...this.state.deadDefault],\r\n      handling: false,\r\n      currentPlayer: 0,\r\n      currentActiveCell: null,\r\n      currentCheck: 'D',\r\n      lock: false\r\n    }, () => this.logEverything())\r\n\r\n    this.logEverything()\r\n  }\r\n\r\n  // Отработка нажатия на клетку доски\r\n  handleClick(i) {\r\n    // // Доска\r\n    let squares = this.state.squares\r\n    // Если тыкнули на пустую клетку\r\n    if (!squares[i]) {\r\n      return\r\n    }\r\n\r\n    // Если игрок еще не выбрал шашку и тыкнул на одну из своих\r\n    if (squares[i].charAt(0) === this.playerNames[this.state.currentPlayer % 4] && !this.state.handling) {\r\n      this.setState({\r\n        currentCheck: squares[i],\r\n      }, () => this.logEverything())\r\n      // Хайлайтим ходы для выбранной шашки\r\n      squares[i] = squares[i].toLocaleLowerCase()\r\n      squares = this.checkMovement(squares, i, false)\r\n      this.setState({\r\n        currentActiveCell: i,\r\n        handling: true,\r\n        squares: squares\r\n      }, () => this.logEverything())\r\n\r\n\r\n    } else {\r\n      // Если игрок уже тыкал на другую шашку и хочет ее сменить, при этом не ходя предыдущей\r\n      if (!this.state.lock && this.state.handling && squares[i].charAt(0) === squares[this.state.currentActiveCell].charAt(0).toUpperCase()) {\r\n        // Возвращаем предыдущую к состоянию до хайлайтов\r\n        squares = this.reverseSelection(squares)\r\n\r\n        // Запоминаем новую шашку\r\n        this.setState({\r\n          currentActiveCell: i,\r\n          currentCheck: squares[i],\r\n          handling: true,\r\n          squares: squares\r\n        }, () => this.logEverything())\r\n\r\n        // Смотрим возможные ходы для новой\r\n        squares[i] = squares[i].toLocaleLowerCase()\r\n        squares = this.checkMovement(squares, i, false)\r\n      }\r\n    }\r\n\r\n    // Если игрок выбрал шашку и тыкнул в один из хайлайтов\r\n    if (this.state.handling && squares[i] === 'v') {\r\n      // Заменяем хайлайт на выбранную шашку\r\n      squares[i] = this.state.currentCheck\r\n\r\n      // Смотрим, можно ли продолжить ход, также удаляем фишки, стоявшие на пути игрока\r\n      let resume = false\r\n      if (this.state.currentActiveCell % 6 < i % 6 && Math.abs(this.state.currentActiveCell - i) > 1) {\r\n        squares[i - 1] = null\r\n        resume = true\r\n      }\r\n      if (Math.floor(this.state.currentActiveCell / 6) < Math.floor(i / 6) && this.state.currentActiveCell % 6 === i % 6 && Math.abs(this.state.currentActiveCell - i) > 6) {\r\n        squares[i - 6] = null\r\n        resume = true\r\n      }\r\n      if (this.state.currentActiveCell % 6 > i % 6 && Math.abs(this.state.currentActiveCell - i) > 1) {\r\n        squares[i + 1] = null\r\n        resume = true\r\n      }\r\n      if (Math.floor(this.state.currentActiveCell / 6) > Math.floor(i / 6) && this.state.currentActiveCell % 6 === i % 6 && Math.abs(this.state.currentActiveCell - i) > 6) {\r\n        squares[i + 6] = null\r\n        resume = true\r\n      }\r\n\r\n      // Смотрим, можно ли сделать из шашки дамку\r\n      squares = this.makeQueen(this.validate(squares), i)\r\n\r\n      // На всякий запоминаем положение доски и скидываем лок на выбор другой шашки\r\n      this.setState({\r\n        squares: squares,\r\n        handling: false,\r\n        lock: false,\r\n      }, () => this.logEverything())\r\n\r\n\r\n      // Если можно продолжить\r\n      if (resume && this.canResume(squares, i, this.state.currentCheck)) {\r\n        // Хайлайтим возможные ходы\r\n        squares = this.checkMovement(squares, i, true)\r\n        this.setState({\r\n          currentCheck: squares[i],\r\n        })\r\n        squares[i] = squares[i].toLocaleLowerCase()\r\n        this.setState({\r\n          squares: squares,\r\n          currentPlayer: this.state.currentPlayer,\r\n          handling: true,\r\n          currentActiveCell: i,\r\n          lock: true,\r\n        }, () => this.logEverything())\r\n\r\n      } else {\r\n        // Если продолжить нельзя\r\n        this.chechAlive(squares)\r\n        this.setState({\r\n          squares: this.skipTurn(squares)\r\n        }, () => this.logEverything())\r\n        \r\n        \r\n      }\r\n    }\r\n    // this.chechAlive(squares)\r\n\r\n  }\r\n\r\n  chechAlive(squares) {\r\n    let ded = this.state.dead\r\n    for (let p = 0; p < 4; p++) {\r\n      let playerDead = true\r\n      for (let i = 0; i < 36; i++) {\r\n        if (squares[i] && squares[i].charAt(0).toUpperCase() === this.playerNames[p]) {\r\n          playerDead = false\r\n        }\r\n      }\r\n      ded[p] = playerDead\r\n    }\r\n    this.setState({\r\n      dead: ded,\r\n    }, () => this.logEverything())\r\n  }\r\n\r\n  // Смотрим, можно ли создать дамку\r\n  makeQueen(squares, i) {\r\n    // Если шашка уже дамка\r\n    if (this.state.currentCheck.length !== 1) {\r\n      return squares\r\n    }\r\n    // Смотрим на углы поля\r\n    switch (this.state.currentCheck) {\r\n      case this.playerNames[0]: {\r\n        if (i == 35) {\r\n          squares[35] = this.state.currentCheck + \"Q\"\r\n        }\r\n\r\n        break\r\n      }\r\n      case this.playerNames[1]: {\r\n        if (i == 30) {\r\n          squares[30] = this.state.currentCheck + \"Q\"\r\n        }\r\n        break\r\n      }\r\n      case this.playerNames[2]: {\r\n        if (i == 0) {\r\n          squares[0] = this.state.currentCheck + \"Q\"\r\n        }\r\n        break\r\n      }\r\n      case this.playerNames[3]: {\r\n        if (i == 5) {\r\n          squares[5] = this.state.currentCheck + \"Q\"\r\n        }\r\n        break\r\n      }\r\n    }\r\n    // Возвращаем обработанную доску\r\n    return squares\r\n  }\r\n\r\n  // Смотрим, можно ли кого-нибудь съесть с нынешним расположением шашки игрока\r\n  canResume(squares, i, check) {\r\n    let left = true, right = true, up = true, down = true\r\n\r\n    // Проверяем положение шашки на поле\r\n    if (i < 5) {\r\n      up = false\r\n    }\r\n    if (i > 28) {\r\n      down = false\r\n    }\r\n    if ((i % 6) < 2) {\r\n      left = false\r\n    }\r\n    if ((i % 6) > 3) {\r\n      right = false\r\n    }\r\n\r\n    // Проверяем возможность захавать шашку противника \r\n    if (!(up && squares[i - 6] && squares[i - 6].charAt(0) !== check.charAt(0) && squares[i - 12] === null)) {\r\n      up = false\r\n    }\r\n    if (!(down && squares[i + 6] && squares[i + 6].charAt(0) !== check.charAt(0) && squares[i + 12] === null)) {\r\n      down = false\r\n    }\r\n    if (!(left && squares[i - 1] && squares[i - 1].charAt(0) !== check.charAt(0) && squares[i - 2] === null)) {\r\n      left = false\r\n    }\r\n    if (!(right && squares[i + 1] && squares[i + 1].charAt(0) !== check.charAt(0) && squares[i + 2] === null)) {\r\n      right = false\r\n    }\r\n    return (up || down || right || left)\r\n  }\r\n\r\n  // Убираем все хайлайты\r\n  // returns : игровое поле\r\n  validate(squares) {\r\n    return squares.map(x => x ? (x !== x.toLocaleLowerCase() ? x : null) : null)\r\n  }\r\n\r\n  // Обработка ситуации, когда игрок решил сдаться\r\n  giveUp() {\r\n    let ded = this.state.dead\r\n    ded[this.state.currentPlayer % 4] = true\r\n    this.setState({\r\n      dead: ded,\r\n    }, () => this.logEverything())\r\n    this.skipTurn()\r\n  }\r\n\r\n  // Переадресация хода на следующего игрока\r\n  // returns : игровое поле\r\n  skipTurn(squares) {\r\n    let turn = this.state.currentPlayer\r\n    let winner = false;\r\n\r\n    for (let i = 1; i < 4; i++) {\r\n      if (!this.state.dead[(this.state.currentPlayer + i) % 4]) {\r\n        turn = i + this.state.currentPlayer\r\n        break\r\n      }\r\n    }\r\n    if (turn === this.state.currentPlayer) {\r\n      alert(\"Winner\")\r\n    }\r\n    this.setState({\r\n      currentPlayer: turn\r\n    }, () => this.logEverything())\r\n    if (squares) {\r\n      return this.reverseSelection(squares)\r\n    } else {\r\n      this.setState({\r\n        handling: false,\r\n        squares: this.validate(this.reverseSelection(this.state.squares))\r\n      }, () => this.logEverything())\r\n    }\r\n  }\r\n\r\n  // Отмена выбора шашки персонажа и очистка хайлайтов\r\n  // returns : игровое поле\r\n  reverseSelection(squares) {\r\n    return squares.map(x => x ? x.toUpperCase() : null).map(x => x === 'V' ? null : x)\r\n  }\r\n\r\n\r\n  // Выставляем хайлайты для шашек\r\n  // returns : игровое поле\r\n  checkMovement(squares, i, lock) {\r\n    // Достаем полный номинал выбранной игроком шашки\r\n    let check = squares[i].toUpperCase()\r\n    // Смотрим, является ли она дамкой\r\n    if (check.endsWith('Q')) {\r\n      // Влево\r\n      for (let q = i - 1; q >= Math.floor(i / 6) * 6; q--) {\r\n        if (squares[q] !== null) {\r\n          if (squares[q].charAt(0) !== check.charAt(0) && squares[q - 1] === null && q !== Math.floor(i % 6) * 6) {\r\n            squares[q - 1] = 'v'\r\n          }\r\n          break\r\n        } else {\r\n          squares[q] = 'v'\r\n        }\r\n      }\r\n      // Вправо\r\n      for (let q = i + 1; q <= Math.floor(i / 6) * 6 + 5; q++) {\r\n        if (squares[q] !== null) {\r\n          if (squares[q].charAt(0) !== check.charAt(0) && squares[q + 1] === null && q !== Math.floor(i % 6) * 6 + 5) {\r\n            squares[q + 1] = 'v'\r\n          }\r\n          break\r\n        } else {\r\n          squares[q] = 'v'\r\n        }\r\n      }\r\n      // Вверх\r\n      for (let q = i - 6; q > 0; q -= 6) {\r\n        if (squares[q] !== null) {\r\n          if (squares[q].charAt(0) !== check.charAt(0) && squares[q - 6] === null && q !== i % 6) {\r\n            squares[q - 6] = 'v'\r\n          }\r\n          break\r\n        } else {\r\n          squares[q] = 'v'\r\n        }\r\n      }\r\n      // Вниз\r\n      for (let q = i + 6; q < 36; q += 6) {\r\n        if (squares[q] !== null) {\r\n          if (squares[q].charAt(0) !== check.charAt(0) && squares[q + 6] === null && q !== 30 + i % 6) {\r\n            squares[q + 6] = 'v'\r\n          }\r\n          break\r\n        } else {\r\n          squares[q] = 'v'\r\n        }\r\n      }\r\n\r\n    } else {\r\n      // Вправо\r\n      if (squares[i + 1]) {\r\n        if (squares[i + 2] === null && check.charAt(0) !== squares[i + 1].charAt(0) && Math.floor((i + 2) / 6) === Math.floor(i / 6)) {\r\n          squares[i + 2] = 'v'\r\n        }\r\n      }\r\n      else {\r\n        if (!lock && i < 35 && Math.floor((i + 1) / 6) === Math.floor(i / 6) && (this.state.currentPlayer % 4 === 0 || this.state.currentPlayer % 4 === 3))\r\n          squares[i + 1] = 'v'\r\n      }\r\n\r\n      // Вниз\r\n      if (squares[i + 6]) {\r\n        if (squares[i + 12] === null && check.charAt(0) !== squares[i + 6].charAt(0) && i + 6 < 30 && i + 6 > 5) {\r\n          squares[i + 12] = 'v'\r\n        }\r\n      }\r\n      else {\r\n        if (!lock && i < 30 && (this.state.currentPlayer % 4 === 0 || this.state.currentPlayer % 4 === 1))\r\n          squares[i + 6] = 'v'\r\n      }\r\n\r\n      // Влево\r\n      if (squares[i - 1]) {\r\n        if (squares[i - 2] === null && check.charAt(0) !== squares[i - 1].charAt(0) && Math.floor((i - 2) / 6) === Math.floor(i / 6)) {\r\n          squares[i - 2] = 'v'\r\n        }\r\n      }\r\n      else {\r\n        if (!lock && i > 0 && Math.floor((i - 1) / 6) === Math.floor(i / 6) && (this.state.currentPlayer % 4 === 1 || this.state.currentPlayer % 4 === 2))\r\n          squares[i - 1] = 'v'\r\n      }\r\n\r\n      // Вверх\r\n      if (squares[i - 6]) {\r\n        if (squares[i - 12] === null && check.charAt(0) !== squares[i - 6].charAt(0) && i - 6 < 30 && i - 6 > 5) {\r\n          squares[i - 12] = 'v'\r\n        }\r\n      }\r\n      else {\r\n        if (!lock && i > 5 && (this.state.currentPlayer % 4 === 2 || this.state.currentPlayer % 4 === 3))\r\n          squares[i - 6] = 'v'\r\n      }\r\n    }\r\n\r\n    return squares\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <>\r\n        <View className=\"game-board\">\r\n          {setBackground(this.state.currentPlayer)}\r\n          <Board\r\n            squares={this.state.squares}\r\n            onClick={i => this.handleClick(i)}\r\n          />\r\n        </View>\r\n        <View className=\"game-info\" style={{ flexDirection: 'row' }}>\r\n          {/* <TouchableOpacity onPress={() => this.reset()} style={styles.imageButton}>\r\n            <Image style={{ flex: 1, alignContent: 'center', width: 40, height: undefined, resizeMode: 'contain', }} source={require('./exit.png' )} />\r\n          </TouchableOpacity> */}\r\n\r\n          <TouchableOpacity onPress={() => this.giveUp()} style={styles.button}>\r\n            <Text style={styles.text}>Quit Game</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity onPress={() => this.skipTurn(null)} style={styles.button}>\r\n            <Text style={styles.text}>Skip Turn</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity onPress={() => this.reset()} style={styles.imageButton}>\r\n            <Image style={{ flex: 1, alignContent: 'center', width: 40, height: undefined, resizeMode: 'contain', }} source={require('./refresh.png')} />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction setBackground(params) {\r\n  switch (params % 4) {\r\n    case 0:\r\n      return <View style={[styles.turnBackground, { backgroundColor: 'rgba(255,255,255,1)', }]}></View>\r\n\r\n    case 1:\r\n      return <View style={[styles.turnBackground, { backgroundColor: 'rgba(255,0,0,1)', }]}></View>\r\n\r\n    case 2:\r\n      return <View style={[styles.turnBackground, { backgroundColor: 'rgba(0,255,0,1)', }]}></View>\r\n\r\n    case 3:\r\n      return <View style={[styles.turnBackground, { backgroundColor: 'rgba(50,50,50,1)' }]}></View>\r\n\r\n    default:\r\n      return <View></View>;\r\n  }\r\n  return <View style={{ position: 'absolute', width: '400px', height: '400px', margin: '0px', backgroundColor: {}, }}></View>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  turnBackground: {\r\n    position: 'absolute',\r\n    width: 425,\r\n    height: 425,\r\n    margin: 0\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    margin: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 28,\r\n    borderRadius: 4,\r\n    elevation: 3,\r\n    backgroundColor: 'black',\r\n  },\r\n  imageButton: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    margin: 10,\r\n    padding: 5,\r\n    borderRadius: 4,\r\n    elevation: 3,\r\n    backgroundColor: 'black',\r\n  },\r\n  text: {\r\n    fontSize: 16,\r\n    lineHeight: 21,\r\n    fontWeight: 'bold',\r\n    letterSpacing: 0.25,\r\n    color: 'white',\r\n  },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}