{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { createStackNavigator, StackActions, NavigationActions } from 'react-navigation';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function (_React$Component) {\n  _inherits(HomeScreen, _React$Component);\n  var _super = _createSuper(HomeScreen);\n  function HomeScreen() {\n    _classCallCheck(this, HomeScreen);\n    return _super.apply(this, arguments);\n  }\n  _createClass(HomeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n      return _jsxs(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: [_jsx(Text, {\n          children: \"Home Screen\"\n        }), _jsx(Button, {\n          title: \"Go to Details\",\n          onPress: function onPress() {\n            _this.props.navigation.dispatch(StackActions.reset({\n              index: 0,\n              actions: [NavigationActions.navigate({\n                routeName: 'Details'\n              })]\n            }));\n          }\n        })]\n      });\n    }\n  }]);\n  return HomeScreen;\n}(React.Component);\nvar DetailsScreen = function (_React$Component2) {\n  _inherits(DetailsScreen, _React$Component2);\n  var _super2 = _createSuper(DetailsScreen);\n  function DetailsScreen() {\n    _classCallCheck(this, DetailsScreen);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(DetailsScreen, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: _jsx(Text, {\n          children: \"Details Screen\"\n        })\n      });\n    }\n  }]);\n  return DetailsScreen;\n}(React.Component);\nexport default createStackNavigator({\n  Home: {\n    screen: HomeScreen\n  },\n  Details: {\n    screen: DetailsScreen\n  }\n}, {\n  initialRouteName: 'Home'\n});","map":{"version":3,"names":["React","createStackNavigator","StackActions","NavigationActions","HomeScreen","flex","alignItems","justifyContent","props","navigation","dispatch","reset","index","actions","navigate","routeName","Component","DetailsScreen","Home","screen","Details","initialRouteName"],"sources":["C:/Users/mikha/Desktop/checkers/App.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, Button } from 'react-native';\nimport { createStackNavigator, StackActions, NavigationActions } from 'react-navigation'; // Version can be specified in package.json\n\nclass HomeScreen extends React.Component {\n  render() {\n    return (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <Text>Home Screen</Text>\n        <Button\n          title=\"Go to Details\"\n          onPress={() => {\n            this.props.navigation.dispatch(StackActions.reset({\n              index: 0,\n              actions: [\n                NavigationActions.navigate({ routeName: 'Details' })\n              ],\n            }))\n          }}\n        />\n      </View>\n    );\n  }  \n}\n\nclass DetailsScreen extends React.Component {\n  render() {\n    return (\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        <Text>Details Screen</Text>\n      </View>\n    );\n  }  \n}\n\nexport default createStackNavigator({\n  Home: {\n    screen: HomeScreen,\n  },\n  Details: {\n    screen: DetailsScreen,\n  },\n}, {\n    initialRouteName: 'Home',\n});"],"mappings":";;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAAA;AAE1B,SAASC,oBAAoB,EAAEC,YAAY,EAAEC,iBAAiB,QAAQ,kBAAkB;AAAC;AAAA;AAAA,IAEnFC,UAAU;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OACd,kBAAS;MAAA;MACP,OACE,MAAC,IAAI;QAAC,KAAK,EAAE;UAAEC,IAAI,EAAE,CAAC;UAAEC,UAAU,EAAE,QAAQ;UAAEC,cAAc,EAAE;QAAS,CAAE;QAAA,WACvE,KAAC,IAAI;UAAA,UAAC;QAAW,EAAO,EACxB,KAAC,MAAM;UACL,KAAK,EAAC,eAAe;UACrB,OAAO,EAAE,mBAAM;YACb,KAAI,CAACC,KAAK,CAACC,UAAU,CAACC,QAAQ,CAACR,YAAY,CAACS,KAAK,CAAC;cAChDC,KAAK,EAAE,CAAC;cACRC,OAAO,EAAE,CACPV,iBAAiB,CAACW,QAAQ,CAAC;gBAAEC,SAAS,EAAE;cAAU,CAAC,CAAC;YAExD,CAAC,CAAC,CAAC;UACL;QAAE,EACF;MAAA,EACG;IAEX;EAAC;EAAA;AAAA,EAlBsBf,KAAK,CAACgB,SAAS;AAAA,IAqBlCC,aAAa;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OACjB,kBAAS;MACP,OACE,KAAC,IAAI;QAAC,KAAK,EAAE;UAAEZ,IAAI,EAAE,CAAC;UAAEC,UAAU,EAAE,QAAQ;UAAEC,cAAc,EAAE;QAAS,CAAE;QAAA,UACvE,KAAC,IAAI;UAAA,UAAC;QAAc;MAAO,EACtB;IAEX;EAAC;EAAA;AAAA,EAPyBP,KAAK,CAACgB,SAAS;AAU3C,eAAef,oBAAoB,CAAC;EAClCiB,IAAI,EAAE;IACJC,MAAM,EAAEf;EACV,CAAC;EACDgB,OAAO,EAAE;IACPD,MAAM,EAAEF;EACV;AACF,CAAC,EAAE;EACCI,gBAAgB,EAAE;AACtB,CAAC,CAAC"},"metadata":{},"sourceType":"module"}