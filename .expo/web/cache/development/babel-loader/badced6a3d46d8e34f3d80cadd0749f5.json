{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { styles } from \"../utils/styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var handleSignIn = function handleSignIn() {\n    if (username.trim()) {\n      console.log({\n        username: username\n      });\n    } else {\n      Alert.alert(\"Username is required.\");\n    }\n  };\n  return _jsx(SafeAreaView, {\n    style: styles.loginscreen,\n    children: _jsxs(View, {\n      style: styles.loginscreen,\n      children: [_jsx(Text, {\n        style: styles.loginheading,\n        children: \"Sign in\"\n      }), _jsx(View, {\n        style: styles.logininputContainer,\n        children: _jsx(TextInput, {\n          autoCorrect: false,\n          placeholder: \"Enter your username\",\n          style: styles.logininput,\n          onChangeText: function onChangeText(value) {\n            return setUsername(value);\n          }\n        })\n      }), _jsx(Pressable, {\n        onPress: handleSignIn,\n        style: styles.loginbutton,\n        children: _jsx(View, {\n          children: _jsx(Text, {\n            style: styles.loginbuttonText,\n            children: \"Get Started\"\n          })\n        })\n      })]\n    })\n  });\n};\nexport default Login;","map":{"version":3,"names":["React","useState","styles","Login","navigation","username","setUsername","handleSignIn","trim","console","log","Alert","alert","loginscreen","loginheading","logininputContainer","logininput","value","loginbutton","loginbuttonText"],"sources":["C:/Users/mikha/Desktop/checkers/screens/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n    Text,\r\n    SafeAreaView,\r\n    View,\r\n    TextInput,\r\n    Pressable,\r\n    Alert,\r\n} from \"react-native\";\r\n\r\n//üëáüèª Import the app styles\r\nimport { styles } from \"../utils/styles\";\r\n\r\nconst Login = ({ navigation }) => {\r\n    const [username, setUsername] = useState(\"\");\r\n\r\n    //üëáüèª checks if the input field is empty\r\n    const handleSignIn = () => {\r\n        if (username.trim()) {\r\n            //üëáüèª Logs the username to the console\r\n            console.log({ username });\r\n        } else {\r\n            Alert.alert(\"Username is required.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <SafeAreaView style={styles.loginscreen}>\r\n            <View style={styles.loginscreen}>\r\n                <Text style={styles.loginheading}>Sign in</Text>\r\n                <View style={styles.logininputContainer}>\r\n                    <TextInput\r\n                        autoCorrect={false}\r\n                        placeholder='Enter your username'\r\n                        style={styles.logininput}\r\n                        onChangeText={(value) => setUsername(value)}\r\n                    />\r\n                </View>\r\n\r\n                <Pressable onPress={handleSignIn} style={styles.loginbutton}>\r\n                    <View>\r\n                        <Text style={styles.loginbuttonText}>Get Started</Text>\r\n                    </View>\r\n                </Pressable>\r\n            </View>\r\n        </SafeAreaView>\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAWxC,SAASC,MAAM;AAA0B;AAAA;AAEzC,IAAMC,KAAK,GAAG,SAARA,KAAK,OAAuB;EAAA,IAAjBC,UAAU,QAAVA,UAAU;EACvB,gBAAgCH,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCI,QAAQ;IAAEC,WAAW;EAG5B,IAAMC,YAAY,GAAG,SAAfA,YAAY,GAAS;IACvB,IAAIF,QAAQ,CAACG,IAAI,EAAE,EAAE;MAEjBC,OAAO,CAACC,GAAG,CAAC;QAAEL,QAAQ,EAARA;MAAS,CAAC,CAAC;IAC7B,CAAC,MAAM;MACHM,KAAK,CAACC,KAAK,CAAC,uBAAuB,CAAC;IACxC;EACJ,CAAC;EAED,OACI,KAAC,YAAY;IAAC,KAAK,EAAEV,MAAM,CAACW,WAAY;IAAA,UACpC,MAAC,IAAI;MAAC,KAAK,EAAEX,MAAM,CAACW,WAAY;MAAA,WAC5B,KAAC,IAAI;QAAC,KAAK,EAAEX,MAAM,CAACY,YAAa;QAAA,UAAC;MAAO,EAAO,EAChD,KAAC,IAAI;QAAC,KAAK,EAAEZ,MAAM,CAACa,mBAAoB;QAAA,UACpC,KAAC,SAAS;UACN,WAAW,EAAE,KAAM;UACnB,WAAW,EAAC,qBAAqB;UACjC,KAAK,EAAEb,MAAM,CAACc,UAAW;UACzB,YAAY,EAAE,sBAACC,KAAK;YAAA,OAAKX,WAAW,CAACW,KAAK,CAAC;UAAA;QAAC;MAC9C,EACC,EAEP,KAAC,SAAS;QAAC,OAAO,EAAEV,YAAa;QAAC,KAAK,EAAEL,MAAM,CAACgB,WAAY;QAAA,UACxD,KAAC,IAAI;UAAA,UACD,KAAC,IAAI;YAAC,KAAK,EAAEhB,MAAM,CAACiB,eAAgB;YAAA,UAAC;UAAW;QAAO;MACpD,EACC;IAAA;EACT,EACI;AAEvB,CAAC;AAED,eAAehB,KAAK"},"metadata":{},"sourceType":"module"}