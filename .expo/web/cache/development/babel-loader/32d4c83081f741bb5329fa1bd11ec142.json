{"ast":null,"code":"import React from 'react';\nimport { Square } from \"./Square\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { AddressSettings } from \"./Settings.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Selection() {\n  var currentText = AddressSettings.address;\n  var setText = function setText(text) {\n    currentText = text;\n  };\n  var apply = function apply(text) {\n    AddressSettings.address = text;\n  };\n  return _jsxs(View, {\n    className: \"AddressSettings-info\",\n    style: {\n      flexDirection: 'column'\n    },\n    children: [_jsx(View, {\n      children: _jsx(Text, {\n        style: styles.info_text,\n        children: \"Input Server IP + Port\"\n      })\n    }), _jsx(View, {\n      style: styles.container,\n      children: _jsx(TextInput, {\n        style: styles.input_container,\n        onChangeText: function onChangeText(newText) {\n          return setText(newText);\n        },\n        defaultValue: AddressSettings.address\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        apply(currentText);\n      },\n      style: styles.button,\n      children: _jsx(Text, {\n        style: styles.text,\n        children: \"Apply\"\n      })\n    })]\n  });\n}\nvar styles = {\n  input_container: {\n    textAlign: 'center',\n    fontSize: 16,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n    padding: 10\n  },\n  container: {\n    borderRadius: 4,\n    borderWidth: 2,\n    borderColor: \"white\"\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 10,\n    paddingVertical: 12,\n    paddingHorizontal: 28,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: 'black'\n  },\n  info: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 10,\n    paddingVertical: 12,\n    paddingHorizontal: 28,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: 'black',\n    opacity: 0.6\n  },\n  imageButton: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 10,\n    padding: 5,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: 'black'\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white'\n  },\n  info_text: {\n    textAlign: 'center',\n    fontSize: 12,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'black'\n  }\n};","map":{"version":3,"names":["React","Square","AddressSettings","Selection","currentText","address","setText","text","apply","flexDirection","styles","info_text","container","input_container","newText","button","textAlign","fontSize","fontWeight","letterSpacing","color","padding","borderRadius","borderWidth","borderColor","alignItems","justifyContent","margin","paddingVertical","paddingHorizontal","elevation","backgroundColor","info","opacity","imageButton","lineHeight"],"sources":["C:/Users/mikha/Desktop/checkers/Selection.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Square } from './Square';\r\nimport { StyleSheet, Text, View, Button, TouchableOpacity, TextInput } from 'react-native';\r\nimport { AddressSettings } from './Settings.js';\r\n\r\nexport function Selection() {\r\n    let currentText = AddressSettings.address\r\n    const setText = text => {\r\n        currentText = text\r\n    }\r\n\r\n    const apply = text => {\r\n        AddressSettings.address = text\r\n    }\r\n\r\n\r\n    return (\r\n        <View className=\"AddressSettings-info\" style={{ flexDirection: 'column' }}>\r\n            <View >\r\n                <Text style={styles.info_text}>\r\n                    Input Server IP + Port\r\n                </Text>\r\n            </View>\r\n            <View style={styles.container}>\r\n                <TextInput style={styles.input_container}\r\n                    onChangeText={newText => setText(newText)}\r\n                    defaultValue={AddressSettings.address}>\r\n                </TextInput>\r\n            </View>\r\n            <TouchableOpacity onPress={() => { apply(currentText) }} style={styles.button}>\r\n                <Text style={styles.text}>Apply</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n\r\n}\r\n\r\n\r\nconst styles = {\r\n    input_container: {\r\n        textAlign: 'center',\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n        letterSpacing: 0.25,\r\n        color: 'white',\r\n        padding: 10,\r\n\r\n    },\r\n    container: {\r\n        borderRadius: 4,\r\n        borderWidth: 2,\r\n\r\n        borderColor: \"white\"\r\n\r\n    },\r\n    button: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        margin: 10,\r\n        paddingVertical: 12,\r\n        paddingHorizontal: 28,\r\n        borderRadius: 4,\r\n        elevation: 3,\r\n        backgroundColor: 'black',\r\n    },\r\n    info: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        margin: 10,\r\n        paddingVertical: 12,\r\n        paddingHorizontal: 28,\r\n        borderRadius: 4,\r\n        elevation: 3,\r\n        backgroundColor: 'black',\r\n        opacity: 0.6\r\n    },\r\n    imageButton: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        margin: 10,\r\n        padding: 5,\r\n        borderRadius: 4,\r\n        elevation: 3,\r\n        backgroundColor: 'black',\r\n    },\r\n    text: {\r\n        fontSize: 16,\r\n        lineHeight: 21,\r\n        fontWeight: 'bold',\r\n        letterSpacing: 0.25,\r\n        color: 'white',\r\n    },\r\n    info_text: {\r\n        textAlign: 'center',\r\n        fontSize: 12,\r\n        lineHeight: 21,\r\n        fontWeight: 'bold',\r\n        letterSpacing: 0.25,\r\n        color: 'black',\r\n    },\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}