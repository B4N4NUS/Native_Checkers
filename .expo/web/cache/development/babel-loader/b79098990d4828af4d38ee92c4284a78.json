{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport { Square } from \"./Square\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { AddressSettings } from \"./Settings.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Selection() {\n  var currentText = AddressSettings.address;\n  var setText = function setText(text) {\n    currentText = text;\n  };\n  var apply = function apply(text) {\n    AddressSettings.address = text;\n  };\n  return _jsxs(View, {\n    className: \"AddressSettings-info\",\n    style: {\n      flexDirection: 'column'\n    },\n    children: [_jsx(TextInput, {\n      style: styles.input_container,\n      onChangeText: function onChangeText(newText) {\n        return setText(newText);\n      },\n      defaultValue: AddressSettings.address\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        apply(currentText);\n      },\n      style: styles.button,\n      children: _jsx(Text, {\n        style: styles.text,\n        children: \"Apply\"\n      })\n    })]\n  });\n}\nvar styles = {\n  input_container: _objectSpread({\n    textAlign: 'left',\n    fontSize: 16,\n    color: 'rgba(0,0,0,0.54)'\n  }, Platform.select({\n    ios: {\n      backgroundColor: 'white',\n      borderRadius: 5,\n      paddingTop: 5,\n      borderWidth: 1,\n      borderColor: '#B0B0B0',\n      paddingBottom: 5,\n      paddingLeft: 10,\n      marginBottom: 15,\n      marginTop: 10\n    },\n    android: {\n      marginTop: 8,\n      borderBottomWidth: 2,\n      borderColor: '#009688'\n    },\n    web: {\n      fontWeight: 'bold',\n      letterSpacing: 0.25,\n      color: 'white'\n    }\n  })),\n  rectangle: {\n    width: 50,\n    height: 50,\n    margin: 10,\n    backgroundColor: \"#338\",\n    transform: 'rotate(45deg)'\n  },\n  cont_row: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  bruh: {\n    position: 'absolute',\n    width: 350,\n    height: 350,\n    margin: 35,\n    backgroundColor: \"rgba(255,255,0,1)\"\n  },\n  check: {\n    height: \"50px\",\n    width: \"50px\",\n    backgroundColor: \"#555\",\n    borderRadius: \"50%\"\n  }\n};","map":{"version":3,"names":["React","Square","AddressSettings","Selection","currentText","address","setText","text","apply","flexDirection","styles","input_container","newText","button","textAlign","fontSize","color","Platform","select","ios","backgroundColor","borderRadius","paddingTop","borderWidth","borderColor","paddingBottom","paddingLeft","marginBottom","marginTop","android","borderBottomWidth","web","fontWeight","letterSpacing","rectangle","width","height","margin","transform","cont_row","display","bruh","position","check"],"sources":["C:/Users/mikha/Desktop/checkers/Selection.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Square } from './Square';\r\nimport { StyleSheet, Text, View, Button, TouchableOpacity, TextInput } from 'react-native';\r\nimport { AddressSettings } from './Settings.js';\r\n\r\nexport function Selection() {\r\n    let currentText = AddressSettings.address\r\n    const setText = text => {\r\n        currentText = text\r\n    }\r\n\r\n    const apply = text => {\r\n        AddressSettings.address = text\r\n    }\r\n\r\n\r\n    return (\r\n        <View className=\"AddressSettings-info\" style={{ flexDirection: 'column' }}>\r\n            <TextInput style={styles.input_container}\r\n                onChangeText={newText => setText(newText)}\r\n                defaultValue={AddressSettings.address}>\r\n            </TextInput>\r\n\r\n            <TouchableOpacity onPress={() => {apply(currentText)}} style={styles.button}>\r\n                <Text style={styles.text}>Apply</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n\r\n}\r\n\r\n\r\nconst styles = {\r\n    input_container: {\r\n        textAlign: 'left',\r\n        fontSize: 16,\r\n        color: 'rgba(0,0,0,0.54)',\r\n        ...Platform.select({\r\n            ios: {\r\n                backgroundColor: 'white',\r\n                borderRadius: 5,\r\n                paddingTop: 5,\r\n                borderWidth: 1,\r\n                borderColor: '#B0B0B0',\r\n                paddingBottom: 5,\r\n                paddingLeft: 10,\r\n                marginBottom: 15,\r\n                marginTop: 10,\r\n            },\r\n            android: {\r\n                marginTop: 8,\r\n                borderBottomWidth: 2,\r\n                borderColor: '#009688',\r\n            },\r\n            web: {\r\n                fontWeight: 'bold',\r\n                letterSpacing: 0.25,\r\n                color: 'white',\r\n            }\r\n        }),\r\n    },\r\n    rectangle: {\r\n        width: 50,\r\n        height: 50,\r\n        margin: 10,\r\n        backgroundColor: \"#338\",\r\n        transform: 'rotate(45deg)',\r\n    },\r\n    cont_row: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n    },\r\n    bruh: {\r\n        position: 'absolute',\r\n        width: 350,\r\n        height: 350,\r\n        margin: 35,\r\n        backgroundColor: \"rgba(255,255,0,1)\",\r\n    },\r\n    check: {\r\n        height: \"50px\",\r\n        width: \"50px\",\r\n        backgroundColor: \"#555\",\r\n        borderRadius: \"50%\",\r\n    }\r\n}"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM;AAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAElC,SAASC,eAAe;AAAwB;AAAA;AAEhD,OAAO,SAASC,SAAS,GAAG;EACxB,IAAIC,WAAW,GAAGF,eAAe,CAACG,OAAO;EACzC,IAAMC,OAAO,GAAG,SAAVA,OAAO,CAAGC,IAAI,EAAI;IACpBH,WAAW,GAAGG,IAAI;EACtB,CAAC;EAED,IAAMC,KAAK,GAAG,SAARA,KAAK,CAAGD,IAAI,EAAI;IAClBL,eAAe,CAACG,OAAO,GAAGE,IAAI;EAClC,CAAC;EAGD,OACI,MAAC,IAAI;IAAC,SAAS,EAAC,sBAAsB;IAAC,KAAK,EAAE;MAAEE,aAAa,EAAE;IAAS,CAAE;IAAA,WACtE,KAAC,SAAS;MAAC,KAAK,EAAEC,MAAM,CAACC,eAAgB;MACrC,YAAY,EAAE,sBAAAC,OAAO;QAAA,OAAIN,OAAO,CAACM,OAAO,CAAC;MAAA,CAAC;MAC1C,YAAY,EAAEV,eAAe,CAACG;IAAQ,EAC9B,EAEZ,KAAC,gBAAgB;MAAC,OAAO,EAAE,mBAAM;QAACG,KAAK,CAACJ,WAAW,CAAC;MAAA,CAAE;MAAC,KAAK,EAAEM,MAAM,CAACG,MAAO;MAAA,UACxE,KAAC,IAAI;QAAC,KAAK,EAAEH,MAAM,CAACH,IAAK;QAAA,UAAC;MAAK;IAAO,EACvB;EAAA,EAChB;AAGf;AAGA,IAAMG,MAAM,GAAG;EACXC,eAAe;IACXG,SAAS,EAAE,MAAM;IACjBC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EAAkB,GACtBC,QAAQ,CAACC,MAAM,CAAC;IACfC,GAAG,EAAE;MACDC,eAAe,EAAE,OAAO;MACxBC,YAAY,EAAE,CAAC;MACfC,UAAU,EAAE,CAAC;MACbC,WAAW,EAAE,CAAC;MACdC,WAAW,EAAE,SAAS;MACtBC,aAAa,EAAE,CAAC;MAChBC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE,EAAE;MAChBC,SAAS,EAAE;IACf,CAAC;IACDC,OAAO,EAAE;MACLD,SAAS,EAAE,CAAC;MACZE,iBAAiB,EAAE,CAAC;MACpBN,WAAW,EAAE;IACjB,CAAC;IACDO,GAAG,EAAE;MACDC,UAAU,EAAE,MAAM;MAClBC,aAAa,EAAE,IAAI;MACnBjB,KAAK,EAAE;IACX;EACJ,CAAC,CAAC,CACL;EACDkB,SAAS,EAAE;IACPC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,EAAE;IACVjB,eAAe,EAAE,MAAM;IACvBkB,SAAS,EAAE;EACf,CAAC;EACDC,QAAQ,EAAE;IACNC,OAAO,EAAE,MAAM;IACf/B,aAAa,EAAE;EACnB,CAAC;EACDgC,IAAI,EAAE;IACFC,QAAQ,EAAE,UAAU;IACpBP,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXC,MAAM,EAAE,EAAE;IACVjB,eAAe,EAAE;EACrB,CAAC;EACDuB,KAAK,EAAE;IACHP,MAAM,EAAE,MAAM;IACdD,KAAK,EAAE,MAAM;IACbf,eAAe,EAAE,MAAM;IACvBC,YAAY,EAAE;EAClB;AACJ,CAAC"},"metadata":{},"sourceType":"module"}