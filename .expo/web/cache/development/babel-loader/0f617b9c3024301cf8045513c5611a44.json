{"ast":null,"code":"import React from 'react';\nimport { Square } from \"./Square\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { AddressSettings } from \"./Settings.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Selection(_ref) {\n  var address = _ref.address;\n  var currentText = AddressSettings.address;\n  var setText = function setText(text) {\n    currentText = text;\n  };\n  var apply = function apply(text) {\n    AddressSettings.address = text;\n  };\n  return _jsxs(View, {\n    className: \"AddressSettings-info\",\n    style: {\n      flexDirection: 'column'\n    },\n    children: [_jsx(TextInput, {\n      onChangeText: function onChangeText(newText) {\n        return setText(newText);\n      },\n      defaultValue: AddressSettings.address\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        apply(currentText);\n      },\n      style: styles.button,\n      children: _jsx(Text, {\n        style: styles.text,\n        children: \"Apply\"\n      })\n    })]\n  });\n}\nvar styles = {\n  rectangle: {\n    width: 50,\n    height: 50,\n    margin: 10,\n    backgroundColor: \"#338\",\n    transform: 'rotate(45deg)'\n  },\n  cont_row: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  },\n  bruh: {\n    position: 'absolute',\n    width: 350,\n    height: 350,\n    margin: 35,\n    backgroundColor: \"rgba(255,255,0,1)\"\n  },\n  check: {\n    height: \"50px\",\n    width: \"50px\",\n    backgroundColor: \"#555\",\n    borderRadius: \"50%\"\n  }\n};","map":{"version":3,"names":["React","Square","AddressSettings","Selection","address","currentText","setText","text","apply","flexDirection","newText","styles","button","rectangle","width","height","margin","backgroundColor","transform","cont_row","display","bruh","position","check","borderRadius"],"sources":["C:/Users/mikha/Desktop/checkers/Selection.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Square } from './Square';\r\nimport { StyleSheet, Text, View, Button, TouchableOpacity, TextInput } from 'react-native';\r\nimport { AddressSettings } from './Settings.js';\r\n\r\nexport function Selection({ address }) {\r\n    let currentText = AddressSettings.address\r\n    const setText = text => {\r\n        // address(text)\r\n        currentText = text\r\n    }\r\n\r\n    const apply = text => {\r\n        // address(text)\r\n        AddressSettings.address = text\r\n    }\r\n\r\n\r\n    return (\r\n        <View className=\"AddressSettings-info\" style={{ flexDirection: 'column' }}>\r\n            <TextInput\r\n                onChangeText={newText => setText(newText)}\r\n                defaultValue={AddressSettings.address}>\r\n            </TextInput>\r\n\r\n            <TouchableOpacity onPress={() => {apply(currentText)}} style={styles.button}>\r\n                <Text style={styles.text}>Apply</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n\r\n}\r\n\r\n\r\nconst styles = {\r\n    rectangle: {\r\n        width: 50,\r\n        height: 50,\r\n        margin: 10,\r\n        backgroundColor: \"#338\",\r\n        transform: 'rotate(45deg)',\r\n    },\r\n    cont_row: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n    },\r\n    bruh: {\r\n        position: 'absolute',\r\n        width: 350,\r\n        height: 350,\r\n        margin: 35,\r\n        backgroundColor: \"rgba(255,255,0,1)\",\r\n    },\r\n    check: {\r\n        height: \"50px\",\r\n        width: \"50px\",\r\n        backgroundColor: \"#555\",\r\n        borderRadius: \"50%\",\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM;AAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAElC,SAASC,eAAe;AAAwB;AAAA;AAEhD,OAAO,SAASC,SAAS,OAAc;EAAA,IAAXC,OAAO,QAAPA,OAAO;EAC/B,IAAIC,WAAW,GAAGH,eAAe,CAACE,OAAO;EACzC,IAAME,OAAO,GAAG,SAAVA,OAAO,CAAGC,IAAI,EAAI;IAEpBF,WAAW,GAAGE,IAAI;EACtB,CAAC;EAED,IAAMC,KAAK,GAAG,SAARA,KAAK,CAAGD,IAAI,EAAI;IAElBL,eAAe,CAACE,OAAO,GAAGG,IAAI;EAClC,CAAC;EAGD,OACI,MAAC,IAAI;IAAC,SAAS,EAAC,sBAAsB;IAAC,KAAK,EAAE;MAAEE,aAAa,EAAE;IAAS,CAAE;IAAA,WACtE,KAAC,SAAS;MACN,YAAY,EAAE,sBAAAC,OAAO;QAAA,OAAIJ,OAAO,CAACI,OAAO,CAAC;MAAA,CAAC;MAC1C,YAAY,EAAER,eAAe,CAACE;IAAQ,EAC9B,EAEZ,KAAC,gBAAgB;MAAC,OAAO,EAAE,mBAAM;QAACI,KAAK,CAACH,WAAW,CAAC;MAAA,CAAE;MAAC,KAAK,EAAEM,MAAM,CAACC,MAAO;MAAA,UACxE,KAAC,IAAI;QAAC,KAAK,EAAED,MAAM,CAACJ,IAAK;QAAA,UAAC;MAAK;IAAO,EACvB;EAAA,EAChB;AAGf;AAGA,IAAMI,MAAM,GAAG;EACXE,SAAS,EAAE;IACPC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,EAAE;IACVC,eAAe,EAAE,MAAM;IACvBC,SAAS,EAAE;EACf,CAAC;EACDC,QAAQ,EAAE;IACNC,OAAO,EAAE,MAAM;IACfX,aAAa,EAAE;EACnB,CAAC;EACDY,IAAI,EAAE;IACFC,QAAQ,EAAE,UAAU;IACpBR,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXC,MAAM,EAAE,EAAE;IACVC,eAAe,EAAE;EACrB,CAAC;EACDM,KAAK,EAAE;IACHR,MAAM,EAAE,MAAM;IACdD,KAAK,EAAE,MAAM;IACbG,eAAe,EAAE,MAAM;IACvBO,YAAY,EAAE;EAClB;AACJ,CAAC"},"metadata":{},"sourceType":"module"}