{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport React, { useLayoutEffect, useState } from \"react\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { styles } from \"../utils/styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatComponent = function ChatComponent(_ref) {\n  var item = _ref.item;\n  var navigation = useNavigation();\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  useLayoutEffect(function () {\n    setMessages(item.messages[item.messages.length - 1]);\n  }, []);\n  var handleNavigation = function handleNavigation() {\n    navigation.navigate(\"Messaging\", {\n      id: item.id,\n      name: item.name\n    });\n  };\n  return _jsxs(Pressable, {\n    style: styles.cchat,\n    onPress: handleNavigation,\n    children: [_jsx(Ionicons, {\n      name: \"person-circle-outline\",\n      size: 45,\n      color: \"black\",\n      style: styles.cavatar\n    }), _jsxs(View, {\n      style: styles.crightContainer,\n      children: [_jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.cusername,\n          children: item.name\n        }), _jsx(Text, {\n          style: styles.cmessage,\n          children: messages != null && messages.text ? messages.text : \"Tap to start chatting\"\n        })]\n      }), _jsx(View, {\n        children: _jsx(Text, {\n          style: styles.ctime,\n          children: messages != null && messages.time ? messages.time : \"now\"\n        })\n      })]\n    })]\n  });\n};\nexport default ChatComponent;","map":{"version":3,"names":["React","useLayoutEffect","useState","Ionicons","useNavigation","styles","ChatComponent","item","navigation","messages","setMessages","length","handleNavigation","navigate","id","name","cchat","cavatar","crightContainer","cusername","cmessage","text","ctime","time"],"sources":["C:/Users/mikha/Desktop/checkers/component/ChatComponent.js"],"sourcesContent":["import { View, Text, Pressable } from \"react-native\";\r\nimport React, { useLayoutEffect, useState } from \"react\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { styles } from \"../utils/styles\";\r\n\r\nconst ChatComponent = ({ item }) => {\r\n    const navigation = useNavigation();\r\n    const [messages, setMessages] = useState({});\r\n\r\n    //👇🏻 Retrieves the last message in the array from the item prop\r\n    useLayoutEffect(() => {\r\n        setMessages(item.messages[item.messages.length - 1]);\r\n    }, []);\r\n\r\n    ///👇🏻 Navigates to the Messaging screen\r\n    const handleNavigation = () => {\r\n        navigation.navigate(\"Messaging\", {\r\n            id: item.id,\r\n            name: item.name,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Pressable style={styles.cchat} onPress={handleNavigation}>\r\n            <Ionicons\r\n                name='person-circle-outline'\r\n                size={45}\r\n                color='black'\r\n                style={styles.cavatar}\r\n            />\r\n\r\n            <View style={styles.crightContainer}>\r\n                <View>\r\n                    <Text style={styles.cusername}>{item.name}</Text>\r\n\r\n                    <Text style={styles.cmessage}>\r\n                        {messages?.text ? messages.text : \"Tap to start chatting\"}\r\n                    </Text>\r\n                </View>\r\n                <View>\r\n                    <Text style={styles.ctime}>\r\n                        {messages?.time ? messages.time : \"now\"}\r\n                    </Text>\r\n                </View>\r\n            </View>\r\n        </Pressable>\r\n    );\r\n};\r\n\r\nexport default ChatComponent;"],"mappings":";;;;AACA,OAAOA,KAAK,IAAIC,eAAe,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,MAAM;AAA0B;AAAA;AAEzC,IAAMC,aAAa,GAAG,SAAhBA,aAAa,OAAiB;EAAA,IAAXC,IAAI,QAAJA,IAAI;EACzB,IAAMC,UAAU,GAAGJ,aAAa,EAAE;EAClC,gBAAgCF,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAA;IAArCO,QAAQ;IAAEC,WAAW;EAG5BT,eAAe,CAAC,YAAM;IAClBS,WAAW,CAACH,IAAI,CAACE,QAAQ,CAACF,IAAI,CAACE,QAAQ,CAACE,MAAM,GAAG,CAAC,CAAC,CAAC;EACxD,CAAC,EAAE,EAAE,CAAC;EAGN,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,GAAS;IAC3BJ,UAAU,CAACK,QAAQ,CAAC,WAAW,EAAE;MAC7BC,EAAE,EAAEP,IAAI,CAACO,EAAE;MACXC,IAAI,EAAER,IAAI,CAACQ;IACf,CAAC,CAAC;EACN,CAAC;EAED,OACI,MAAC,SAAS;IAAC,KAAK,EAAEV,MAAM,CAACW,KAAM;IAAC,OAAO,EAAEJ,gBAAiB;IAAA,WACtD,KAAC,QAAQ;MACL,IAAI,EAAC,uBAAuB;MAC5B,IAAI,EAAE,EAAG;MACT,KAAK,EAAC,OAAO;MACb,KAAK,EAAEP,MAAM,CAACY;IAAQ,EACxB,EAEF,MAAC,IAAI;MAAC,KAAK,EAAEZ,MAAM,CAACa,eAAgB;MAAA,WAChC,MAAC,IAAI;QAAA,WACD,KAAC,IAAI;UAAC,KAAK,EAAEb,MAAM,CAACc,SAAU;UAAA,UAAEZ,IAAI,CAACQ;QAAI,EAAQ,EAEjD,KAAC,IAAI;UAAC,KAAK,EAAEV,MAAM,CAACe,QAAS;UAAA,UACxBX,QAAQ,YAARA,QAAQ,CAAEY,IAAI,GAAGZ,QAAQ,CAACY,IAAI,GAAG;QAAuB,EACtD;MAAA,EACJ,EACP,KAAC,IAAI;QAAA,UACD,KAAC,IAAI;UAAC,KAAK,EAAEhB,MAAM,CAACiB,KAAM;UAAA,UACrBb,QAAQ,YAARA,QAAQ,CAAEc,IAAI,GAAGd,QAAQ,CAACc,IAAI,GAAG;QAAK;MACpC,EACJ;IAAA,EACJ;EAAA,EACC;AAEpB,CAAC;AAED,eAAejB,aAAa"},"metadata":{},"sourceType":"module"}