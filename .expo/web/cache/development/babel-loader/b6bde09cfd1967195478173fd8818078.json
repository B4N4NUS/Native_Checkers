{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useLayoutEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport MessageComponent from \"../component/MessageComponent\";\nimport { styles } from \"../utils/styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Messaging = function Messaging(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState([{\n      id: \"1\",\n      text: \"Hello guys, welcome!\",\n      time: \"07:50\",\n      user: \"Tomer\"\n    }, {\n      id: \"2\",\n      text: \"Hi Tomer, thank you! 😇\",\n      time: \"08:50\",\n      user: \"David\"\n    }]),\n    _useState2 = _slicedToArray(_useState, 2),\n    chatMessages = _useState2[0],\n    setChatMessages = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    message = _useState4[0],\n    setMessage = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    user = _useState6[0],\n    setUser = _useState6[1];\n  var _route$params = route.params,\n    name = _route$params.name,\n    id = _route$params.id;\n  var getUsername = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var value = yield AsyncStorage.getItem(\"username\");\n        if (value !== null) {\n          setUser(value);\n        }\n      } catch (e) {\n        console.error(\"Error while loading username!\");\n      }\n    });\n    return function getUsername() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: name\n    });\n    getUsername();\n  }, []);\n  var handleNewMessage = function handleNewMessage() {\n    var hour = new Date().getHours() < 10 ? \"0\" + new Date().getHours() : \"\" + new Date().getHours();\n    var mins = new Date().getMinutes() < 10 ? \"0\" + new Date().getMinutes() : \"\" + new Date().getMinutes();\n    console.log({\n      message: message,\n      user: user,\n      timestamp: {\n        hour: hour,\n        mins: mins\n      }\n    });\n  };\n  return _jsxs(View, {\n    style: styles.messagingscreen,\n    children: [_jsx(View, {\n      style: [styles.messagingscreen, {\n        paddingVertical: 15,\n        paddingHorizontal: 10\n      }],\n      children: chatMessages[0] ? _jsx(FlatList, {\n        data: chatMessages,\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return _jsx(MessageComponent, {\n            item: item,\n            user: user\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        }\n      }) : \"\"\n    }), _jsxs(View, {\n      style: styles.messaginginputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.messaginginput,\n        onChangeText: function onChangeText(value) {\n          return setMessage(value);\n        }\n      }), _jsx(Pressable, {\n        style: styles.messagingbuttonContainer,\n        onPress: handleNewMessage,\n        children: _jsx(View, {\n          children: _jsx(Text, {\n            style: {\n              color: \"#f2f0f1\",\n              fontSize: 20\n            },\n            children: \"SEND\"\n          })\n        })\n      })]\n    })]\n  });\n};\nexport default Messaging;","map":{"version":3,"names":["React","useLayoutEffect","useState","AsyncStorage","MessageComponent","styles","Messaging","route","navigation","id","text","time","user","chatMessages","setChatMessages","message","setMessage","setUser","params","name","getUsername","value","getItem","e","console","error","setOptions","title","handleNewMessage","hour","Date","getHours","mins","getMinutes","log","timestamp","messagingscreen","paddingVertical","paddingHorizontal","item","messaginginputContainer","messaginginput","messagingbuttonContainer","color","fontSize"],"sources":["C:/Users/mikha/Desktop/checkers/screens/Messaging.js"],"sourcesContent":["import React, { useLayoutEffect, useState } from \"react\";\r\nimport { View, TextInput, Text, FlatList, Pressable } from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport MessageComponent from \"../component/MessageComponent\";\r\nimport { styles } from \"../utils/styles\";\r\n\r\nconst Messaging = ({ route, navigation }) => {\r\n    const [chatMessages, setChatMessages] = useState([\r\n        {\r\n            id: \"1\",\r\n            text: \"Hello guys, welcome!\",\r\n            time: \"07:50\",\r\n            user: \"Tomer\",\r\n        },\r\n        {\r\n            id: \"2\",\r\n            text: \"Hi Tomer, thank you! 😇\",\r\n            time: \"08:50\",\r\n            user: \"David\",\r\n        },\r\n    ]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [user, setUser] = useState(\"\");\r\n\r\n    //👇🏻 Access the chatroom's name and id\r\n    const { name, id } = route.params;\r\n\r\n//👇🏻 This function gets the username saved on AsyncStorage\r\n    const getUsername = async () => {\r\n        try {\r\n            const value = await AsyncStorage.getItem(\"username\");\r\n            if (value !== null) {\r\n                setUser(value);\r\n            }\r\n        } catch (e) {\r\n            console.error(\"Error while loading username!\");\r\n        }\r\n    };\r\n\r\n    //👇🏻 Sets the header title to the name chatroom's name\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({ title: name });\r\n        getUsername()\r\n    }, []);\r\n\r\n    /*👇🏻 \r\n        This function gets the time the user sends a message, then \r\n        logs the username, message, and the timestamp to the console.\r\n     */\r\n    const handleNewMessage = () => {\r\n        const hour =\r\n            new Date().getHours() < 10\r\n                ? `0${new Date().getHours()}`\r\n                : `${new Date().getHours()}`;\r\n\r\n        const mins =\r\n            new Date().getMinutes() < 10\r\n                ? `0${new Date().getMinutes()}`\r\n                : `${new Date().getMinutes()}`;\r\n\r\n        console.log({\r\n            message,\r\n            user,\r\n            timestamp: { hour, mins },\r\n        });\r\n    };\r\n\r\n    return (\r\n        <View style={styles.messagingscreen}>\r\n            <View\r\n                style={[\r\n                    styles.messagingscreen,\r\n                    { paddingVertical: 15, paddingHorizontal: 10 },\r\n                ]}\r\n            >\r\n                {chatMessages[0] ? (\r\n                    <FlatList\r\n                        data={chatMessages}\r\n                        renderItem={({ item }) => (\r\n                            <MessageComponent item={item} user={user} />\r\n                        )}\r\n                        keyExtractor={(item) => item.id}\r\n                    />\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n            </View>\r\n\r\n            <View style={styles.messaginginputContainer}>\r\n                <TextInput\r\n                    style={styles.messaginginput}\r\n                    onChangeText={(value) => setMessage(value)}\r\n                />\r\n                <Pressable\r\n                    style={styles.messagingbuttonContainer}\r\n                    onPress={handleNewMessage}\r\n                >\r\n                    <View>\r\n                        <Text style={{ color: \"#f2f0f1\", fontSize: 20 }}>SEND</Text>\r\n                    </View>\r\n                </Pressable>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Messaging;"],"mappings":"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"},"metadata":{},"sourceType":"module"}