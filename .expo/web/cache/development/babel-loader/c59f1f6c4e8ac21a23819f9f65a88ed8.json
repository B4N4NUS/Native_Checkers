{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport React from 'react';\nimport { Board } from \"./Board\";\nimport { Button } from 'react-native-elements';\nimport { Manager, io } from \"socket.io-client\";\nimport DialogInput from \"./DialogInput\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Game = function (_React$Component) {\n  _inherits(Game, _React$Component);\n  var _super = _createSuper(Game);\n  function Game(props) {\n    var _this;\n    _classCallCheck(this, Game);\n    _this = _super.call(this, props);\n    _this.playerNames = ['D', 'N', 'S', 'M'];\n    var squaress = [];\n    var dead = [];\n    var connectToServer = false;\n    var showDialog = false;\n    var meat = [true, true, true, true];\n    var manCoop = false;\n    var hardmode = false;\n    var wait = false;\n    if (props.mode) {\n      switch (props.mode) {\n        case '4PL':\n          {\n            squaress = ['D', 'D', 'D', 'N', 'N', 'N', 'D', 'D', null, null, 'N', 'N', 'D', null, null, null, null, 'N', 'M', null, null, null, null, 'S', 'M', 'M', null, null, 'S', 'S', 'M', 'M', 'M', 'S', 'S', 'S'];\n            dead = [false, false, false, false];\n            break;\n          }\n        case '4PO':\n          {\n            squaress = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, 'D', null, null, null, null, null, 'M', null, 'N', null, null, null, null, 'S', null, null, null];\n            dead = [false, false, false, false];\n            connectToServer = true;\n            showDialog = true;\n            wait = true;\n            break;\n          }\n        case '2PL':\n          {\n            squaress = ['D', 'D', 'D', null, null, null, 'D', 'D', null, null, null, null, 'D', null, null, null, null, null, null, null, null, null, null, 'S', null, null, null, null, 'S', 'S', null, null, null, 'S', 'S', 'S'];\n            dead = [false, true, false, true];\n            break;\n          }\n        case 'Mann':\n          {\n            squaress = [null, 'D', null, 'NQ', 'NQ', 'NQ', null, null, null, null, null, 'NQ', null, null, null, null, null, 'NQ', 'M', null, null, null, null, 'S', 'M', 'M', null, null, 'S', 'S', 'M', 'M', 'M', 'S', 'S', 'S'];\n            dead = [false, false, false, false];\n            meat = [true, false, false, false];\n            break;\n          }\n        case 'MannHard':\n          {\n            squaress = [null, 'D', null, 'N', 'N', 'N', null, null, null, null, 'N', 'N', null, null, null, null, null, 'N', 'M', null, null, null, null, 'S', 'M', 'M', null, null, 'S', 'S', 'M', 'M', 'M', 'S', 'S', 'S'];\n            dead = [false, false, false, false];\n            meat = [true, false, false, false];\n            hardmode = true;\n            break;\n          }\n        case 'Mann1V1':\n          {\n            squaress = ['D', 'D', 'D', null, null, null, 'D', 'D', null, null, null, null, 'D', null, null, null, null, null, null, null, null, null, null, 'S', null, null, null, null, 'S', 'S', null, null, null, 'S', 'S', 'S'];\n            dead = [false, true, false, true];\n            meat = [true, false, false, false];\n            break;\n          }\n        case 'MannCoop':\n          {\n            squaress = ['D', 'D', 'D', 'N', 'N', 'N', 'D', 'D', null, null, 'N', 'N', 'D', null, null, null, null, 'N', 'M', null, null, null, null, 'S', 'M', 'M', null, null, 'S', 'S', 'M', 'M', 'M', 'S', 'S', 'S'];\n            dead = [false, false, false, false];\n            meat = [true, false, true, false];\n            manCoop = true;\n            break;\n          }\n      }\n    }\n    if (connectToServer) {\n      var io = require('socket.io-client');\n      var socket = io.connect('http://' + props.address);\n      socket.on(\"connect_error\", function () {\n        _this.setText(\"Cant establish connection with server!\\nTry another IP + Port configuration (settings) and check if local server is running properly\");\n      });\n      socket.on('connect', function () {\n        console.log('Server responded!');\n        socket.on(\"new-table\", function (data) {\n          _this.setState({\n            squares: data.squares,\n            currentPlayer: data.currentPlayer,\n            dead: data.dead,\n            handling: data.handling,\n            currentActiveCell: data.currentActiveCell,\n            currentCheck: data.currentCheck,\n            lock: data.lock,\n            disableButtons: false,\n            ended: data.ended\n          });\n        });\n      });\n      socket.on('current-player-id', function (playerId) {\n        _this.setState({\n          currentSocketId: playerId.id,\n          text: _this.state.spectator ? \"Spectator mode\\nCurrent player is \" + playerId.id : \"Current player is \" + playerId.id + \"\\nYour name is \" + _this.state.thisSocketId\n        }, function () {\n          return console.log(\"Current player: \" + playerId.id);\n        });\n      });\n      socket.on('spectator-mode', function () {\n        _this.setState({\n          spectator: true,\n          waiting: true\n        }, function () {\n          _this.setText(\"Spectator Mode\");\n        });\n      });\n      socket.on('wait', function () {\n        _this.setState({\n          spectator: false,\n          waiting: true\n        });\n      });\n      socket.on('wake-up', function () {\n        _this.setState({\n          spectator: false,\n          waiting: false\n        });\n      });\n      socket.on('forbidden-name', function () {\n        alert(\"You entered forbidden name!\\nBut don't worry\\nWe generated you a new unique name\");\n      });\n      socket.on('game-ended', function (playerId) {\n        _this.gameOver(\"Someone disconnected\\nGame has ended\");\n      });\n      socket.on('game-ended-piecefully', function (playerId) {\n        _this.gameOver(\"Game has ended\");\n      });\n      socket.on('reset', function (playerId) {\n        _this.reset();\n      });\n      socket.on('this-player-id', function (playerId) {\n        _this.setState({\n          thisSocketId: playerId.id\n        });\n        if (_this.state.waiting) {\n          _this.setText(\"You are in queue\\nYour name is \" + playerId.id);\n        } else {\n          _this.setText(\"Waiting for players\\nYour name is \" + playerId.id);\n        }\n        console.log(\"This is player: \" + playerId.id);\n      });\n    }\n    _this.state = {\n      squares: squaress,\n      dead: dead,\n      squaresDefault: _toConsumableArray(squaress),\n      deadDefault: dead,\n      handling: false,\n      currentPlayer: 0,\n      currentActiveCell: null,\n      currentCheck: 'D',\n      lock: false,\n      online: connectToServer,\n      socket: socket,\n      currentSocketId: 0,\n      thisSocketId: 1,\n      text: \"Waiting for players\",\n      activeDialog: showDialog,\n      spectator: false,\n      disableButtons: false,\n      meat: meat,\n      manCoop: manCoop,\n      ended: false,\n      harderBots: hardmode,\n      waiting: wait\n    };\n    return _this;\n  }\n  _createClass(Game, [{\n    key: \"logEverything\",\n    value: function logEverything() {\n      if (this.state.online) {\n        this.state.socket.emit(\"new-table\", {\n          \"squares\": this.state.squares,\n          \"currentPlayer\": this.state.currentPlayer,\n          \"dead\": this.state.dead,\n          \"handling\": this.state.handling,\n          \"currentActiveCell\": this.state.currentActiveCell,\n          \"currentCheck\": this.state.currentCheck,\n          \"lock\": this.state.lock,\n          \"ended\": this.state.ended\n        });\n      }\n    }\n  }, {\n    key: \"gameOver\",\n    value: function gameOver(text) {\n      this.setState({\n        disableButtons: true,\n        text: text,\n        spectator: true,\n        ended: true\n      }, function () {\n        return console.log(\"Game Ended\");\n      });\n    }\n  }, {\n    key: \"setText\",\n    value: function setText(text) {\n      this.setState({\n        text: text\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.state.online) {\n        this.state.socket.disconnect();\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var _this2 = this;\n      this.setState({\n        squares: _toConsumableArray(this.state.squaresDefault),\n        dead: _toConsumableArray(this.state.deadDefault),\n        handling: false,\n        currentPlayer: 0,\n        currentActiveCell: null,\n        currentCheck: 'D',\n        lock: false\n      }, function () {\n        return _this2.logEverything();\n      });\n    }\n  }, {\n    key: \"useSkynet\",\n    value: function useSkynet() {\n      var _this3 = this;\n      setTimeout(function () {\n        var squares = _this3.state.squares;\n        var myChecks = [];\n        var player = _this3.state.currentPlayer % 4;\n        var hardmode = _this3.state.harderBots;\n        for (var i = 0; i < squares.length; i++) {\n          if (squares[i] && squares[i].charAt(0) === _this3.playerNames[_this3.state.currentPlayer % 4]) {\n            myChecks[myChecks.length] = i;\n          }\n        }\n        console.log('[' + player + \"] check indexes: \" + myChecks);\n        var movesStart = [];\n        var movesEnd = [];\n        var oneScoreStart = [];\n        var oneScoreEnd = [];\n        var badMovesStart = [];\n        var badMovesEnd = [];\n        var lock = false;\n        for (var _i = 0; _i < myChecks.length; _i++) {\n          var score = 0;\n          if (squares[myChecks[_i]].endsWith('Q')) {\n            for (var q = myChecks[_i] - 1; q >= Math.floor(myChecks[_i] / 6) * 6; q--) {\n              if (squares[q] !== null) {\n                if (squares[q].charAt(0) !== squares[myChecks[_i]].charAt(0) && squares[q - 1] === null && q !== Math.floor(myChecks[_i] % 6) * 6) {\n                  squares[q - 1] = 'V';\n                  score = 2;\n                }\n                break;\n              } else {\n                squares[q] = 'v';\n                score = score > 1 ? 2 : 1;\n              }\n            }\n            for (var _q = myChecks[_i] + 1; _q <= Math.floor(myChecks[_i] / 6) * 6 + 5; _q++) {\n              if (squares[_q] !== null) {\n                if (squares[_q].charAt(0) !== squares[myChecks[_i]].charAt(0) && squares[_q + 1] === null && _q !== Math.floor(myChecks[_i] % 6) * 6 + 5) {\n                  squares[_q + 1] = 'V';\n                  score = 2;\n                }\n                break;\n              } else {\n                squares[_q] = 'v';\n                score = score > 1 ? 2 : 1;\n              }\n            }\n            for (var _q2 = myChecks[_i] - 6; _q2 > 0; _q2 -= 6) {\n              if (squares[_q2] !== null) {\n                if (squares[_q2].charAt(0) !== squares[myChecks[_i]].charAt(0) && squares[_q2 - 6] === null && _q2 !== myChecks[_i] % 6) {\n                  squares[_q2 - 6] = 'V';\n                  score = 2;\n                }\n                break;\n              } else {\n                squares[_q2] = 'v';\n                score = score > 1 ? 2 : 1;\n              }\n            }\n            for (var _q3 = myChecks[_i] + 6; _q3 < 36; _q3 += 6) {\n              if (squares[_q3] !== null) {\n                if (squares[_q3].charAt(0) !== squares[myChecks[_i]].charAt(0) && squares[_q3 + 6] === null && _q3 !== 30 + myChecks[_i] % 6) {\n                  squares[_q3 + 6] = 'V';\n                  score = 2;\n                }\n                break;\n              } else {\n                squares[_q3] = 'v';\n                score = score > 1 ? 2 : 1;\n              }\n            }\n          } else {\n            if (squares[myChecks[_i] + 1]) {\n              if (squares[myChecks[_i] + 2] === null && squares[myChecks[_i]].charAt(0) !== squares[myChecks[_i] + 1].charAt(0) && Math.floor((myChecks[_i] + 2) / 6) === Math.floor(myChecks[_i] / 6)) {\n                squares[myChecks[_i] + 2] = 'V';\n                score = 2;\n              }\n            } else {\n              if (myChecks[_i] < 35 && Math.floor((myChecks[_i] + 1) / 6) === Math.floor(myChecks[_i] / 6) && (player === 0 || player === 3)) {\n                if (hardmode && myChecks[_i] < 33 && squares[myChecks[_i] + 2] && squares[myChecks[_i] + 3] && squares[myChecks[_i]].charAt(0) !== squares[myChecks[_i] + 2] && squares[myChecks[_i]].charAt(0) !== squares[myChecks[_i] + 3]) {\n                  squares[myChecks[_i] + 1] = 'vb';\n                } else {\n                  squares[myChecks[_i] + 1] = 'v';\n                }\n                score = score > 1 ? 2 : 1;\n              }\n            }\n            if (squares[myChecks[_i] + 6]) {\n              if (squares[myChecks[_i] + 12] === null && squares[myChecks[_i]].charAt(0) !== squares[myChecks[_i] + 6].charAt(0) && myChecks[_i] + 6 < 30 && myChecks[_i] + 6 > 5) {\n                squares[myChecks[_i] + 12] = 'V';\n                score = 2;\n              }\n            } else {\n              if (myChecks[_i] < 30 && (player === 0 || player === 1)) {\n                if (hardmode && myChecks[_i] < 18 && squares[myChecks[_i] + 12] && squares[myChecks[_i] + 18] && squares[myChecks[_i]].charAt(0) !== squares[myChecks[_i] + 12] && squares[myChecks[_i]].charAt(0) !== squares[myChecks[_i] + 18]) {\n                  squares[myChecks[_i] + 6] = 'vb';\n                } else {\n                  squares[myChecks[_i] + 6] = 'v';\n                }\n                score = score > 1 ? 2 : 1;\n              }\n            }\n            if (squares[myChecks[_i] - 1]) {\n              if (squares[myChecks[_i] - 2] === null && squares[myChecks[_i]].charAt(0) !== squares[myChecks[_i] - 1].charAt(0) && Math.floor((myChecks[_i] - 2) / 6) === Math.floor(myChecks[_i] / 6)) {\n                squares[myChecks[_i] - 2] = 'V';\n                score = 2;\n              }\n            } else {\n              if (myChecks[_i] > 0 && Math.floor((myChecks[_i] - 1) / 6) === Math.floor(myChecks[_i] / 6) && (player === 1 || player === 2)) {\n                if (hardmode && myChecks[_i] > 2 && squares[myChecks[_i] - 2] && squares[myChecks[_i] - 3] && squares[myChecks[_i]].charAt(0) !== squares[myChecks[_i] - 2] && squares[myChecks[_i]].charAt(0) !== squares[myChecks[_i] - 3]) {\n                  squares[myChecks[_i] - 1] = 'vb';\n                } else {\n                  squares[myChecks[_i] - 1] = 'v';\n                }\n                score = score > 1 ? 2 : 1;\n              }\n            }\n            if (squares[myChecks[_i] - 6]) {\n              if (squares[myChecks[_i] - 12] === null && squares[myChecks[_i]].charAt(0) !== squares[myChecks[_i] - 6].charAt(0) && myChecks[_i] - 6 < 30 && myChecks[_i] - 6 > 5) {\n                squares[myChecks[_i] - 12] = 'V';\n                score = 2;\n              }\n            } else {\n              if (myChecks[_i] > 5 && (player === 2 || player === 3)) {\n                if (myChecks[_i] > 17 && squares[myChecks[_i] - 12] && squares[myChecks[_i] - 18] && squares[myChecks[_i]].charAt(0) !== squares[myChecks[_i] - 12] && squares[myChecks[_i]].charAt(0) !== squares[myChecks[_i] - 18]) {\n                  squares[myChecks[_i] - 6] = 'vb';\n                } else {\n                  squares[myChecks[_i] - 6] = 'v';\n                }\n                score = score > 1 ? 2 : 1;\n              }\n            }\n          }\n          if (score === 0) {\n            continue;\n          }\n          var bestMoves = [];\n          var badMoves = [];\n          for (var j = 0; j < squares.length; j++) {\n            if (score === 1 && squares[j] === 'v') {\n              bestMoves[bestMoves.length] = j;\n            }\n            if (score === 2 && squares[j] === 'V') {\n              bestMoves[bestMoves.length] = j;\n            }\n            if (squares[j] === 'vb') {\n              badMoves[badMoves.length] = j;\n            }\n          }\n          if (bestMoves.length !== 0) {\n            if (score === 2) {\n              movesStart[movesStart.length] = myChecks[_i];\n              movesEnd[movesEnd.length] = bestMoves[Math.floor(Math.random() * bestMoves.length)];\n            } else {\n              oneScoreStart[oneScoreStart.length] = myChecks[_i];\n              oneScoreEnd[oneScoreEnd.length] = bestMoves[Math.floor(Math.random() * bestMoves.length)];\n            }\n          } else {\n            if (badMoves.length !== 0) {\n              badMovesStart[badMovesStart.length] = myChecks[_i];\n              badMovesEnd[badMovesEnd.length] = badMoves[Math.floor(Math.random() * badMoves.length)];\n            }\n          }\n          squares = squares.map(function (x) {\n            return x ? x.toLocaleLowerCase().includes('v') ? null : x : null;\n          });\n        }\n        if (movesStart.length > 0) {\n          var rnd = Math.floor(Math.random() * movesStart.length);\n          squares[movesStart[rnd]] = squares[movesStart[rnd]].toLocaleLowerCase();\n          _this3.setState({\n            currentActiveCell: movesStart[rnd],\n            currentCheck: squares[movesStart[rnd]].toUpperCase(),\n            currentPlayer: player,\n            squares: _this3.checkMovement(squares, movesStart[rnd], false),\n            handling: true\n          }, function () {\n            var move = _this3.handleClick(movesEnd[rnd]);\n            var timerId = setInterval(function () {\n              if (move && move.includes('v')) {\n                move = _this3.handleClick(move.findIndex(function (x) {\n                  return x && x === 'v';\n                }));\n              } else {\n                clearInterval(timerId);\n              }\n            }, 1000);\n          });\n          console.log(\"[\" + player + \"] AI HAS MADE A GOOD MOVE\");\n          return;\n        }\n        if (oneScoreStart.length > 0) {\n          var _rnd = Math.floor(Math.random() * oneScoreStart.length);\n          squares[oneScoreStart[_rnd]] = squares[oneScoreStart[_rnd]].toLocaleLowerCase();\n          _this3.setState({\n            currentActiveCell: oneScoreStart[_rnd],\n            currentCheck: squares[oneScoreStart[_rnd]].toUpperCase(),\n            currentPlayer: player,\n            squares: _this3.checkMovement(squares, oneScoreStart[_rnd], false),\n            handling: true\n          }, function () {\n            return _this3.handleClick(oneScoreEnd[_rnd]);\n          });\n          console.log(\"[\" + player + \"] AI HAS MADE A NORMAL MOVE\");\n          return;\n        }\n        if (badMovesStart.length > 0) {\n          var _rnd2 = Math.floor(Math.random() * badMovesStart.length);\n          squares[badMovesStart[_rnd2]] = squares[badMovesStart[_rnd2]].toLocaleLowerCase();\n          _this3.setState({\n            currentActiveCell: badMovesStart[_rnd2],\n            currentCheck: squares[badMovesStart[_rnd2]].toUpperCase(),\n            currentPlayer: player,\n            squares: _this3.checkMovement(squares, badMovesStart[_rnd2], false),\n            handling: true\n          }, function () {\n            return _this3.handleClick(badMovesEnd[_rnd2]);\n          });\n          console.log(\"[\" + player + \"] AI WAS DESPERATE TO MAKE A BAD MOVE\");\n          return;\n        }\n        console.log(\"[\" + player + \"] AI CANT MOVE\");\n        _this3.skipTurn();\n      }, 1000);\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(i) {\n      var _this4 = this;\n      if (this.state.online && this.state.currentSocketId !== this.state.thisSocketId || this.state.ended) {\n        return;\n      }\n      var squares = this.state.squares;\n      if (!squares[i]) {\n        return;\n      }\n      if (squares[i].charAt(0) === this.playerNames[this.state.currentPlayer % 4] && !this.state.handling) {\n        this.setState({\n          currentCheck: squares[i]\n        }, function () {\n          return _this4.logEverything();\n        });\n        squares[i] = squares[i].toLocaleLowerCase();\n        squares = this.checkMovement(squares, i, false);\n        this.setState({\n          currentActiveCell: i,\n          handling: true,\n          squares: squares\n        }, function () {\n          return _this4.logEverything();\n        });\n      } else {\n        if (!this.state.lock && this.state.handling && squares[i].charAt(0) === squares[this.state.currentActiveCell].charAt(0).toUpperCase()) {\n          squares = this.reverseSelection(squares);\n          this.setState({\n            currentActiveCell: i,\n            currentCheck: squares[i],\n            handling: true,\n            squares: squares\n          }, function () {\n            return _this4.logEverything();\n          });\n          squares[i] = squares[i].toLocaleLowerCase();\n          squares = this.checkMovement(squares, i, false);\n        }\n      }\n      if (this.state.handling && squares[i] === 'v') {\n        squares[i] = this.state.currentCheck;\n        var resume = false;\n        var eaten = false;\n        if (this.state.currentActiveCell % 6 < i % 6 && Math.abs(this.state.currentActiveCell - i) > 1) {\n          if (squares[i - 1] !== 'v') {\n            eaten = true;\n            squares[i - 1] = null;\n          }\n          resume = true;\n        }\n        if (Math.floor(this.state.currentActiveCell / 6) < Math.floor(i / 6) && this.state.currentActiveCell % 6 === i % 6 && Math.abs(this.state.currentActiveCell - i) > 6) {\n          if (squares[i - 6] !== 'v') {\n            eaten = true;\n            squares[i - 6] = null;\n          }\n          resume = true;\n        }\n        if (this.state.currentActiveCell % 6 > i % 6 && Math.abs(this.state.currentActiveCell - i) > 1) {\n          if (squares[i + 1] !== 'v') {\n            eaten = true;\n            squares[i + 1] = null;\n          }\n          resume = true;\n        }\n        if (Math.floor(this.state.currentActiveCell / 6) > Math.floor(i / 6) && this.state.currentActiveCell % 6 === i % 6 && Math.abs(this.state.currentActiveCell - i) > 6) {\n          if (squares[i + 6] !== 'v') {\n            eaten = true;\n            squares[i + 6] = null;\n          }\n          resume = true;\n        }\n        squares = this.makeQueen(this.validate(squares), i);\n        this.setState({\n          squares: squares,\n          handling: false,\n          lock: false\n        }, function () {\n          return _this4.logEverything();\n        });\n        if (eaten && resume && this.canResume(squares, i, this.state.currentCheck)) {\n          squares = this.checkMovement(squares, i, true);\n          this.setState({\n            currentCheck: squares[i]\n          });\n          squares[i] = squares[i].toLocaleLowerCase();\n          this.setState({\n            squares: squares,\n            currentPlayer: this.state.currentPlayer,\n            handling: true,\n            currentActiveCell: i,\n            lock: true\n          }, function () {\n            return _this4.logEverything();\n          });\n        } else {\n          this.chechAlive(squares);\n          this.setState({\n            squares: this.skipTurn(squares)\n          }, function () {\n            return _this4.logEverything();\n          });\n        }\n      }\n      return squares;\n    }\n  }, {\n    key: \"chechAlive\",\n    value: function chechAlive(squares) {\n      var _this5 = this;\n      var ded = this.state.dead;\n      for (var p = 0; p < 4; p++) {\n        var playerDead = true;\n        for (var i = 0; i < 36; i++) {\n          if (squares[i] && squares[i].charAt(0).toUpperCase() === this.playerNames[p]) {\n            playerDead = false;\n          }\n        }\n        ded[p] = playerDead;\n      }\n      this.setState({\n        dead: ded\n      }, function () {\n        return _this5.logEverything();\n      });\n    }\n  }, {\n    key: \"makeQueen\",\n    value: function makeQueen(squares, i) {\n      if (this.state.currentCheck.length !== 1) {\n        return squares;\n      }\n      switch (this.state.currentCheck) {\n        case this.playerNames[0]:\n          {\n            if (i == 35) {\n              squares[35] = this.state.currentCheck + \"Q\";\n            }\n            break;\n          }\n        case this.playerNames[1]:\n          {\n            if (i == 30) {\n              squares[30] = this.state.currentCheck + \"Q\";\n            }\n            break;\n          }\n        case this.playerNames[2]:\n          {\n            if (i == 0) {\n              squares[0] = this.state.currentCheck + \"Q\";\n            }\n            break;\n          }\n        case this.playerNames[3]:\n          {\n            if (i == 5) {\n              squares[5] = this.state.currentCheck + \"Q\";\n            }\n            break;\n          }\n      }\n      return squares;\n    }\n  }, {\n    key: \"canResume\",\n    value: function canResume(squares, i, check) {\n      var left = true,\n        right = true,\n        up = true,\n        down = true;\n      if (i < 5) {\n        up = false;\n      }\n      if (i > 28) {\n        down = false;\n      }\n      if (i % 6 < 2) {\n        left = false;\n      }\n      if (i % 6 > 3) {\n        right = false;\n      }\n      if (!(up && squares[i - 6] && squares[i - 6].charAt(0) !== check.charAt(0) && squares[i - 12] === null)) {\n        up = false;\n      }\n      if (!(down && squares[i + 6] && squares[i + 6].charAt(0) !== check.charAt(0) && squares[i + 12] === null)) {\n        down = false;\n      }\n      if (!(left && squares[i - 1] && squares[i - 1].charAt(0) !== check.charAt(0) && squares[i - 2] === null)) {\n        left = false;\n      }\n      if (!(right && squares[i + 1] && squares[i + 1].charAt(0) !== check.charAt(0) && squares[i + 2] === null)) {\n        right = false;\n      }\n      return up || down || right || left;\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(squares) {\n      return squares.map(function (x) {\n        return x ? x !== x.toLocaleLowerCase() ? x : null : null;\n      });\n    }\n  }, {\n    key: \"giveUp\",\n    value: function giveUp() {\n      var _this6 = this;\n      var ded = this.state.dead;\n      ded[this.state.currentPlayer % 4] = true;\n      this.setState({\n        dead: ded,\n        squares: this.state.squares.map(function (x) {\n          return x ? x.charAt(0).toUpperCase() === _this6.playerNames[_this6.state.currentPlayer % 4] ? null : x : null;\n        })\n      }, function () {\n        _this6.logEverything();\n        _this6.skipTurn();\n      });\n    }\n  }, {\n    key: \"skipTurn\",\n    value: function skipTurn(squares) {\n      var _this7 = this;\n      var turn = this.state.currentPlayer;\n      var winner = false;\n      for (var i = 1; i < 4; i++) {\n        if (!this.state.dead[(this.state.currentPlayer + i) % 4]) {\n          turn = i + this.state.currentPlayer;\n          break;\n        }\n      }\n      var deadMeat = true,\n        deadAI = true;\n      for (var _i2 = 0; _i2 < 4; _i2++) {\n        if (!this.state.dead[_i2]) {\n          if (this.state.meat[_i2]) {\n            deadMeat = false;\n          } else {\n            deadAI = false;\n          }\n        }\n      }\n      if (this.state.manCoop) {\n        console.log(\"MEAT: \" + deadMeat + \" AI: \" + deadAI);\n      }\n      if (turn === this.state.currentPlayer || this.state.manCoop && (deadAI || deadMeat)) {\n        this.gameOver(\"Game Over\");\n      }\n      this.setState({\n        currentPlayer: turn\n      }, function () {\n        _this7.logEverything();\n        if (!_this7.state.meat[turn % 4]) {\n          _this7.useSkynet();\n        }\n      });\n      if (squares) {\n        return this.reverseSelection(squares);\n      } else {\n        this.setState({\n          handling: false,\n          squares: this.validate(this.reverseSelection(this.state.squares))\n        }, function () {\n          return _this7.logEverything();\n        });\n      }\n    }\n  }, {\n    key: \"reverseSelection\",\n    value: function reverseSelection(squares) {\n      return squares.map(function (x) {\n        return x ? x.toUpperCase() : null;\n      }).map(function (x) {\n        return x === 'V' ? null : x;\n      });\n    }\n  }, {\n    key: \"checkMovement\",\n    value: function checkMovement(squares, i, lock) {\n      var check = squares[i].toUpperCase();\n      if (check.endsWith('Q')) {\n        for (var q = i - 1; q >= Math.floor(i / 6) * 6; q--) {\n          if (squares[q] !== null) {\n            if (squares[q].charAt(0) !== check.charAt(0) && squares[q - 1] === null && q !== Math.floor(i % 6) * 6) {\n              squares[q - 1] = 'v';\n            }\n            break;\n          } else {\n            squares[q] = 'v';\n          }\n        }\n        for (var _q4 = i + 1; _q4 <= Math.floor(i / 6) * 6 + 5; _q4++) {\n          if (squares[_q4] !== null) {\n            if (squares[_q4].charAt(0) !== check.charAt(0) && squares[_q4 + 1] === null && _q4 !== Math.floor(i % 6) * 6 + 5) {\n              squares[_q4 + 1] = 'v';\n            }\n            break;\n          } else {\n            squares[_q4] = 'v';\n          }\n        }\n        for (var _q5 = i - 6; _q5 > 0; _q5 -= 6) {\n          if (squares[_q5] !== null) {\n            if (squares[_q5].charAt(0) !== check.charAt(0) && squares[_q5 - 6] === null && _q5 !== i % 6) {\n              squares[_q5 - 6] = 'v';\n            }\n            break;\n          } else {\n            squares[_q5] = 'v';\n          }\n        }\n        for (var _q6 = i + 6; _q6 < 36; _q6 += 6) {\n          if (squares[_q6] !== null) {\n            if (squares[_q6].charAt(0) !== check.charAt(0) && squares[_q6 + 6] === null && _q6 !== 30 + i % 6) {\n              squares[_q6 + 6] = 'v';\n            }\n            break;\n          } else {\n            squares[_q6] = 'v';\n          }\n        }\n      } else {\n        if (squares[i + 1]) {\n          if (squares[i + 2] === null && check.charAt(0) !== squares[i + 1].charAt(0) && Math.floor((i + 2) / 6) === Math.floor(i / 6)) {\n            squares[i + 2] = 'v';\n          }\n        } else {\n          if (!lock && i < 35 && Math.floor((i + 1) / 6) === Math.floor(i / 6) && (this.state.currentPlayer % 4 === 0 || this.state.currentPlayer % 4 === 3)) squares[i + 1] = 'v';\n        }\n        if (squares[i + 6]) {\n          if (squares[i + 12] === null && check.charAt(0) !== squares[i + 6].charAt(0) && i + 6 < 30 && i + 6 > 5) {\n            squares[i + 12] = 'v';\n          }\n        } else {\n          if (!lock && i < 30 && (this.state.currentPlayer % 4 === 0 || this.state.currentPlayer % 4 === 1)) squares[i + 6] = 'v';\n        }\n        if (squares[i - 1]) {\n          if (squares[i - 2] === null && check.charAt(0) !== squares[i - 1].charAt(0) && Math.floor((i - 2) / 6) === Math.floor(i / 6)) {\n            squares[i - 2] = 'v';\n          }\n        } else {\n          if (!lock && i > 0 && Math.floor((i - 1) / 6) === Math.floor(i / 6) && (this.state.currentPlayer % 4 === 1 || this.state.currentPlayer % 4 === 2)) squares[i - 1] = 'v';\n        }\n        if (squares[i - 6]) {\n          if (squares[i - 12] === null && check.charAt(0) !== squares[i - 6].charAt(0) && i - 6 < 30 && i - 6 > 5) {\n            squares[i - 12] = 'v';\n          }\n        } else {\n          if (!lock && i > 5 && (this.state.currentPlayer % 4 === 2 || this.state.currentPlayer % 4 === 3)) squares[i - 6] = 'v';\n        }\n      }\n      return squares;\n    }\n  }, {\n    key: \"generateBullscheisse\",\n    value: function generateBullscheisse() {\n      var d = new Date().getTime();\n      var d2 = performance && performance.now && performance.now() * 1000 || 0;\n      return 'xxxxxxxx-xxxx-4xxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16;\n        if (d > 0) {\n          r = (d + r) % 16 | 0;\n          d = Math.floor(d / 16);\n        } else {\n          r = (d2 + r) % 16 | 0;\n          d2 = Math.floor(d2 / 16);\n        }\n        return (c == 'x' ? r : r & 0x7 | 0x8).toString(16);\n      });\n    }\n  }, {\n    key: \"denyDialog\",\n    value: function denyDialog() {\n      this.acceptDialog(this.generateBullscheisse());\n    }\n  }, {\n    key: \"acceptDialog\",\n    value: function acceptDialog(input) {\n      this.state.socket.emit('handshake', {\n        \"name\": input\n      });\n      this.setState({\n        thisSocketId: input,\n        activeDialog: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n      return _jsxs(_Fragment, {\n        children: [this.state.online && _jsx(DialogInput, {\n          isDialogVisible: this.state.activeDialog,\n          title: \"How would you like to be called\",\n          hintInput: \"Oleg Gazmanov\",\n          submitInput: function submitInput(inputText) {\n            return _this8.acceptDialog(inputText);\n          },\n          closeDialog: function closeDialog() {\n            return _this8.denyDialog();\n          }\n        }), (this.state.online || this.state.spectator) && _jsx(View, {\n          style: styles.info,\n          children: _jsx(Text, {\n            style: styles.text,\n            children: this.state.text\n          })\n        }), !this.state.waiting && _jsxs(View, {\n          className: \"game-board\",\n          children: [setBackground(this.state.currentPlayer), _jsx(Board, {\n            squares: this.state.squares,\n            onClick: function onClick(i) {\n              return _this8.handleClick(i);\n            }\n          })]\n        }), _jsxs(View, {\n          className: \"game-info\",\n          style: {\n            flexDirection: 'row'\n          },\n          children: [!this.state.spectator && !this.state.waiting && _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this8.giveUp();\n            },\n            style: styles.button,\n            disabled: this.state.disableButtons,\n            children: _jsx(Text, {\n              style: styles.text,\n              children: \"Quit Game\"\n            })\n          }), !this.state.spectator && !this.state.waiting && _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this8.skipTurn(null);\n            },\n            style: styles.button,\n            disabled: this.state.disableButtons,\n            children: _jsx(Text, {\n              style: styles.text,\n              children: \"Skip Turn\"\n            })\n          }), !this.state.online && _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this8.reset();\n            },\n            style: styles.imageButton,\n            disabled: this.state.disableButtons,\n            children: _jsx(Image, {\n              style: {\n                flex: 1,\n                alignContent: 'center',\n                width: 40,\n                height: undefined,\n                resizeMode: 'contain'\n              },\n              source: require(\"./refresh.png\")\n            })\n          })]\n        })]\n      });\n    }\n  }]);\n  return Game;\n}(React.Component);\nfunction setBackground(params) {\n  switch (params % 4) {\n    case 0:\n      return _jsx(View, {\n        style: [styles.turnBackground, {\n          backgroundColor: 'rgba(255,255,255,1)'\n        }]\n      });\n    case 1:\n      return _jsx(View, {\n        style: [styles.turnBackground, {\n          backgroundColor: 'rgba(255,0,0,1)'\n        }]\n      });\n    case 2:\n      return _jsx(View, {\n        style: [styles.turnBackground, {\n          backgroundColor: 'rgba(0,255,0,1)'\n        }]\n      });\n    case 3:\n      return _jsx(View, {\n        style: [styles.turnBackground, {\n          backgroundColor: 'rgba(50,50,50,1)'\n        }]\n      });\n    default:\n      return _jsx(View, {});\n  }\n  return _jsx(View, {\n    style: {\n      position: 'absolute',\n      width: '400px',\n      height: '400px',\n      margin: '0px',\n      backgroundColor: {}\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  turnBackground: {\n    position: 'absolute',\n    width: 345,\n    height: 345,\n    margin: 0\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 8,\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: 'black'\n  },\n  info: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 10,\n    paddingVertical: 12,\n    paddingHorizontal: 28,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: 'black',\n    opacity: 0.6\n  },\n  imageButton: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 10,\n    padding: 5,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: 'black'\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white'\n  }\n});","map":{"version":3,"names":["React","Board","Button","Manager","io","DialogInput","Game","props","playerNames","squaress","dead","connectToServer","showDialog","meat","manCoop","hardmode","wait","mode","require","socket","connect","address","on","setText","console","log","data","setState","squares","currentPlayer","handling","currentActiveCell","currentCheck","lock","disableButtons","ended","playerId","currentSocketId","id","text","state","spectator","thisSocketId","waiting","alert","gameOver","reset","squaresDefault","deadDefault","online","activeDialog","harderBots","emit","disconnect","logEverything","setTimeout","myChecks","player","i","length","charAt","movesStart","movesEnd","oneScoreStart","oneScoreEnd","badMovesStart","badMovesEnd","score","endsWith","q","Math","floor","bestMoves","badMoves","j","random","map","x","toLocaleLowerCase","includes","rnd","toUpperCase","checkMovement","move","handleClick","timerId","setInterval","findIndex","clearInterval","skipTurn","reverseSelection","resume","eaten","abs","makeQueen","validate","canResume","chechAlive","ded","p","playerDead","check","left","right","up","down","turn","winner","deadMeat","deadAI","useSkynet","d","Date","getTime","d2","performance","now","replace","c","r","toString","acceptDialog","generateBullscheisse","input","inputText","denyDialog","styles","info","setBackground","flexDirection","giveUp","button","imageButton","flex","alignContent","width","height","undefined","resizeMode","Component","params","turnBackground","backgroundColor","position","margin","StyleSheet","create","alignItems","justifyContent","paddingVertical","paddingHorizontal","borderRadius","elevation","opacity","padding","fontSize","lineHeight","fontWeight","letterSpacing","color"],"sources":["C:/Users/mikha/Desktop/checkers/Native_Checkers/Game.jsx"],"sourcesContent":["import { StyleSheet, Text, View, TouchableOpacity, Image, Alert } from 'react-native';\r\nimport React from 'react';\r\nimport { Board } from './Board'\r\nimport { Button } from 'react-native-elements';\r\nimport { Manager, io } from \"socket.io-client\";\r\nimport DialogInput from './DialogInput';\r\n\r\n\r\n\r\nexport class Game extends React.Component {\r\n  // Имена игроков по часовой стрелке\r\n  playerNames = ['D', 'N', 'S', 'M']\r\n\r\n  logEverything() {\r\n    if (this.state.online) {\r\n      this.state.socket.emit(\"new-table\", {\r\n        \"squares\": this.state.squares,\r\n        \"currentPlayer\": this.state.currentPlayer,\r\n        \"dead\": this.state.dead,\r\n        \"handling\": this.state.handling,\r\n        \"currentActiveCell\": this.state.currentActiveCell,\r\n        \"currentCheck\": this.state.currentCheck,\r\n        \"lock\": this.state.lock,\r\n        \"ended\": this.state.ended\r\n      })\r\n    }\r\n  }\r\n\r\n  gameOver(text) {\r\n    // alert(\"Someone disconnected\\nGame has ended\")\r\n    this.setState({\r\n      disableButtons: true,\r\n      text: text,\r\n      spectator: true,\r\n      ended: true\r\n    }, () => console.log(\"Game Ended\"))\r\n  }\r\n\r\n  setText(text) {\r\n    this.setState({\r\n      text: text,\r\n    })\r\n  } \r\n\r\n  componentWillUnmount() {\r\n    if (this.state.online) {\r\n      this.state.socket.disconnect()\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let squaress = []\r\n    let dead = []\r\n    let connectToServer = false\r\n    let showDialog = false\r\n    let meat = [true, true, true, true]\r\n    let manCoop = false\r\n    let hardmode = false\r\n    let wait = false\r\n\r\n    if (props.mode) {\r\n      switch (props.mode) {\r\n        case '4PL': {\r\n          squaress = [\r\n            //   'D', null, null, null, null, 'N',\r\n            //   'D', null, null, null, null, 'N',\r\n            //   null, 'DQ', null, null, 'S', null,\r\n            //   'M', null, null, 'DQ', null, null,\r\n            //   null, 'M', null, null, 'DQ', 'S',\r\n            //   null, null, null, null, 'D', null,\r\n            // ],\r\n            'D', 'D', 'D', 'N', 'N', 'N',\r\n            'D', 'D', null, null, 'N', 'N',\r\n            'D', null, null, null, null, 'N',\r\n            'M', null, null, null, null, 'S',\r\n            'M', 'M', null, null, 'S', 'S',\r\n            'M', 'M', 'M', 'S', 'S', 'S',\r\n          ]\r\n          dead = [false, false, false, false]\r\n          break\r\n        }\r\n        case '4PO': {\r\n          squaress = [\r\n            // 'D', 'D', 'D', 'N', 'N', 'N',\r\n            // 'D', 'D', null, null, 'N', 'N',\r\n            // 'D', null, null, null, null, 'N',\r\n            // 'M', null, null, null, null, 'S',\r\n            // 'M', 'M', null, null, 'S', 'S',\r\n            // 'M', 'M', 'M', 'S', 'S', 'S',\r\n            null, null, null, null, null, null,\r\n            null, null, null, null, null,null,\r\n            null, null, null, null, null, null,\r\n            null, 'D', null, null, null, null,\r\n            null, 'M', null, 'N',null,  null,\r\n            null, null, 'S', null, null, null,\r\n          ]\r\n          dead = [false, false, false, false]\r\n          connectToServer = true\r\n          showDialog = true\r\n          wait = true\r\n          break\r\n        }\r\n        case '2PL': {\r\n          squaress = [\r\n            'D', 'D', 'D', null, null, null,\r\n            'D', 'D', null, null, null, null,\r\n            'D', null, null, null, null, null,\r\n            null, null, null, null, null, 'S',\r\n            null, null, null, null, 'S', 'S',\r\n            null, null, null, 'S', 'S', 'S',\r\n          ]\r\n          dead = [false, true, false, true]\r\n          break\r\n        }\r\n        case 'Mann': {\r\n          squaress = [\r\n            // 'D', 'D', 'D', 'N', 'N', 'N',\r\n            // 'D', 'D', null, null, 'N', 'N',\r\n            // 'D', null, null, null, null, 'N',\r\n            // 'M', null, null, null, null, 'S',\r\n            // 'M', 'M', null, null, 'S', 'S',\r\n            // 'M', 'M', 'M', 'S', 'S', 'S',\r\n            null, 'D', null, 'NQ', 'NQ', 'NQ',\r\n            null, null, null, null, null, 'NQ',\r\n            null, null, null, null, null, 'NQ',\r\n            'M', null, null, null, null, 'S',\r\n            'M', 'M', null, null, 'S', 'S',\r\n            'M', 'M', 'M', 'S', 'S', 'S',\r\n          ]\r\n          dead = [false, false, false, false]\r\n          meat = [true, false, false, false]\r\n          break\r\n        }\r\n        case 'MannHard': {\r\n          squaress = [\r\n            // 'D', 'D', 'D', 'N', 'N', 'N',\r\n            // 'D', 'D', null, null, 'N', 'N',\r\n            // 'D', null, null, null, null, 'N',\r\n            // 'M', null, null, null, null, 'S',\r\n            // 'M', 'M', null, null, 'S', 'S',\r\n            // 'M', 'M', 'M', 'S', 'S', 'S',\r\n            null, 'D', null, 'N', 'N', 'N',\r\n            null, null, null, null, 'N', 'N',\r\n            null, null, null, null, null, 'N',\r\n            'M', null, null, null, null, 'S',\r\n            'M', 'M', null, null, 'S', 'S',\r\n            'M', 'M', 'M', 'S', 'S', 'S',\r\n\r\n            // null, 'D', 'D', null, null, null,\r\n            // null, null, 'D', null, null, null,\r\n            // 'D', 'D', 'N', 'D', 'D', null,\r\n            // 'D', , null, null, 'D', 'D',\r\n            // null, null, 'D', null, null, null,\r\n            // null, null, 'D', null, null, null,\r\n          ]\r\n          dead = [false, false, false, false]\r\n          meat = [true, false, false, false]\r\n          hardmode = true\r\n          break\r\n        }\r\n        case 'Mann1V1': {\r\n          squaress = [\r\n            'D', 'D', 'D', null, null, null,\r\n            'D', 'D', null, null, null, null,\r\n            'D', null, null, null, null, null,\r\n            null, null, null, null, null, 'S',\r\n            null, null, null, null, 'S', 'S',\r\n            null, null, null, 'S', 'S', 'S',\r\n          ]\r\n          dead = [false, true, false, true]\r\n          meat = [true, false, false, false]\r\n          break\r\n        }\r\n        case 'MannCoop': {\r\n          squaress = [\r\n            'D', 'D', 'D', 'N', 'N', 'N',\r\n            'D', 'D', null, null, 'N', 'N',\r\n            'D', null, null, null, null, 'N',\r\n            'M', null, null, null, null, 'S',\r\n            'M', 'M', null, null, 'S', 'S',\r\n            'M', 'M', 'M', 'S', 'S', 'S',\r\n          ]\r\n          dead = [false, false, false, false]\r\n          meat = [true, false, true, false]\r\n          manCoop = true\r\n          break\r\n        }\r\n      }\r\n    }\r\n\r\n    if (connectToServer) {\r\n      var io = require('socket.io-client');\r\n      var socket = io.connect('http://' + props.address);\r\n      socket.on(\"connect_error\", () => {\r\n        this.setText(\"Cant establish connection with server!\\nTry another IP + Port configuration (settings) and check if local server is running properly\")\r\n      });\r\n\r\n      socket.on('connect', () => {\r\n        console.log('Server responded!');\r\n\r\n        socket.on(\"new-table\", (data) => {\r\n          this.setState({\r\n            squares: data.squares,\r\n            currentPlayer: data.currentPlayer,\r\n            dead: data.dead,\r\n            handling: data.handling,\r\n            currentActiveCell: data.currentActiveCell,\r\n            currentCheck: data.currentCheck,\r\n            lock: data.lock,\r\n            disableButtons: false,\r\n            ended: data.ended\r\n          })\r\n        })\r\n\r\n      });\r\n      socket.on('current-player-id', (playerId) => {\r\n        this.setState({\r\n          currentSocketId: playerId.id,\r\n          text: this.state.spectator ? \"Spectator mode\\nCurrent player is \" + playerId.id : \"Current player is \" + playerId.id + \"\\nYour name is \" + this.state.thisSocketId\r\n        }, () => console.log(\"Current player: \" + playerId.id))\r\n      });\r\n      socket.on('spectator-mode', () => {\r\n        this.setState({\r\n          // thisSocketId: this.generateBullscheisse(),\r\n          spectator: true,\r\n          waiting: true,\r\n        },() => {this.setText(\"Spectator Mode\")})\r\n      });\r\n      socket.on('wait', () => {\r\n        this.setState({\r\n          // thisSocketId: this.generateBullscheisse(), \r\n          spectator: false,\r\n          waiting: true,\r\n        })\r\n      });\r\n      socket.on('wake-up',() => {\r\n        // alert(\"woke up\")\r\n        this.setState({\r\n          // thisSocketId: this.generateBullscheisse(),\r\n          spectator: false,\r\n          waiting: false,\r\n        })\r\n      })\r\n      socket.on('forbidden-name', () => {\r\n        alert(\"You entered forbidden name!\\nBut don't worry\\nWe generated you a new unique name\")\r\n      });\r\n      socket.on('game-ended', (playerId) => {\r\n        this.gameOver(\"Someone disconnected\\nGame has ended\")\r\n\r\n      });\r\n      socket.on('game-ended-piecefully', (playerId) => {\r\n        this.gameOver(\"Game has ended\")\r\n\r\n      });\r\n      socket.on('reset', (playerId) => {\r\n        this.reset()\r\n\r\n      });\r\n      socket.on('this-player-id', (playerId) => {\r\n        this.setState({\r\n          thisSocketId: playerId.id,\r\n        })\r\n        if (this.state.waiting) {\r\n          this.setText(\"You are in queue\\nYour name is \" + playerId.id)\r\n        } else {\r\n          this.setText(\"Waiting for players\\nYour name is \" + playerId.id)\r\n        }\r\n        console.log(\"This is player: \" + playerId.id)\r\n      });\r\n\r\n    }\r\n\r\n\r\n    this.state = {\r\n      //   'D', null, null, null, null, 'N',\r\n      //   'D', null, null, null, null, 'N',\r\n      //   null, 'DQ', null, null, 'S', null,\r\n      //   'M', null, null, 'DQ', null, null,\r\n      //   null, 'M', null, null, 'DQ', 'S',\r\n      //   null, null, null, null, 'D', null,\r\n      // ],\r\n      squares: squaress,\r\n      dead: dead,\r\n      squaresDefault: [...squaress],\r\n      deadDefault: dead,\r\n      handling: false,\r\n      currentPlayer: 0,\r\n      currentActiveCell: null,\r\n      currentCheck: 'D',\r\n      lock: false,\r\n      online: connectToServer,\r\n      socket: socket,\r\n      currentSocketId: 0,\r\n      thisSocketId: 1,\r\n      text: \"Waiting for players\",\r\n      activeDialog: showDialog,\r\n      spectator: false,\r\n      disableButtons: false,\r\n      meat: meat,\r\n      manCoop: manCoop,\r\n      ended: false,\r\n      harderBots: hardmode,\r\n      waiting: wait\r\n    };\r\n  }\r\n\r\n  reset() {\r\n    this.setState({\r\n      squares: [...this.state.squaresDefault],\r\n      dead: [...this.state.deadDefault],\r\n      handling: false,\r\n      currentPlayer: 0,\r\n      currentActiveCell: null,\r\n      currentCheck: 'D',\r\n      lock: false\r\n    }, () => this.logEverything())\r\n  }\r\n\r\n  useSkynet() {\r\n    setTimeout(() => {\r\n\r\n      let squares = this.state.squares\r\n      let myChecks = []\r\n      let player = this.state.currentPlayer % 4\r\n      let hardmode = this.state.harderBots\r\n\r\n      // Получаем информацию о индексах шашек ИИ.\r\n      for (let i = 0; i < squares.length; i++) {\r\n        if (squares[i] && squares[i].charAt(0) === this.playerNames[this.state.currentPlayer % 4]) {\r\n          myChecks[myChecks.length] = i\r\n        }\r\n      }\r\n      console.log('[' + player + \"] check indexes: \" + myChecks)\r\n\r\n      let movesStart = []\r\n      let movesEnd = []\r\n      let oneScoreStart = []\r\n      let oneScoreEnd = []\r\n      let badMovesStart = []\r\n      let badMovesEnd = []\r\n      let lock = false\r\n\r\n      // Проходимся по всем шашкам ИИ.\r\n      for (let i = 0; i < myChecks.length; i++) {\r\n        let score = 0\r\n\r\n        // Ходы для дамки\r\n        if (squares[myChecks[i]].endsWith('Q')) {\r\n          // Влево\r\n          for (let q = myChecks[i] - 1; q >= Math.floor(myChecks[i] / 6) * 6; q--) {\r\n            if (squares[q] !== null) {\r\n              if (squares[q].charAt(0) !== squares[myChecks[i]].charAt(0) && squares[q - 1] === null && q !== Math.floor(myChecks[i] % 6) * 6) {\r\n                squares[q - 1] = 'V'\r\n                score = 2\r\n              }\r\n              break\r\n            } else {\r\n              squares[q] = 'v'\r\n              score = score > 1 ? 2 : 1\r\n            }\r\n          }\r\n          // Вправо\r\n          for (let q = myChecks[i] + 1; q <= Math.floor(myChecks[i] / 6) * 6 + 5; q++) {\r\n            if (squares[q] !== null) {\r\n              if (squares[q].charAt(0) !== squares[myChecks[i]].charAt(0) && squares[q + 1] === null && q !== Math.floor(myChecks[i] % 6) * 6 + 5) {\r\n                squares[q + 1] = 'V'\r\n                score = 2\r\n              }\r\n              break\r\n            } else {\r\n              squares[q] = 'v'\r\n              score = score > 1 ? 2 : 1\r\n            }\r\n          }\r\n          // Вверх\r\n          for (let q = myChecks[i] - 6; q > 0; q -= 6) {\r\n            if (squares[q] !== null) {\r\n              if (squares[q].charAt(0) !== squares[myChecks[i]].charAt(0) && squares[q - 6] === null && q !== myChecks[i] % 6) {\r\n                squares[q - 6] = 'V'\r\n                score = 2\r\n              }\r\n              break\r\n            } else {\r\n              squares[q] = 'v'\r\n              score = score > 1 ? 2 : 1\r\n            }\r\n          }\r\n          // Вниз\r\n          for (let q = myChecks[i] + 6; q < 36; q += 6) {\r\n            if (squares[q] !== null) {\r\n              if (squares[q].charAt(0) !== squares[myChecks[i]].charAt(0) && squares[q + 6] === null && q !== 30 + myChecks[i] % 6) {\r\n                squares[q + 6] = 'V'\r\n                score = 2\r\n              }\r\n              break\r\n            } else {\r\n              squares[q] = 'v'\r\n              score = score > 1 ? 2 : 1\r\n            }\r\n          }\r\n        }\r\n        // Ходы для обычной шашки\r\n        else {\r\n          // Вправо\r\n          if (squares[myChecks[i] + 1]) {\r\n            if (squares[myChecks[i] + 2] === null && squares[myChecks[i]].charAt(0) !== squares[myChecks[i] + 1].charAt(0) && Math.floor((myChecks[i] + 2) / 6) === Math.floor(myChecks[i] / 6)) {\r\n              squares[myChecks[i] + 2] = 'V'\r\n              score = 2\r\n            }\r\n          }\r\n          else {\r\n            if (myChecks[i] < 35 && Math.floor((myChecks[i] + 1) / 6) === Math.floor(myChecks[i] / 6) && (player === 0 || player === 3)) {\r\n              if (hardmode && myChecks[i] < 33 && squares[myChecks[i] + 2] && squares[myChecks[i] + 3] && squares[myChecks[i]].charAt(0) !== squares[myChecks[i] + 2] && squares[myChecks[i]].charAt(0) !== squares[myChecks[i] + 3]) {\r\n                squares[myChecks[i] + 1] = 'vb'\r\n              } else {\r\n                squares[myChecks[i] + 1] = 'v'\r\n              }\r\n              score = score > 1 ? 2 : 1\r\n            }\r\n          }\r\n\r\n          // Вниз\r\n          if (squares[myChecks[i] + 6]) {\r\n            if (squares[myChecks[i] + 12] === null && squares[myChecks[i]].charAt(0) !== squares[myChecks[i] + 6].charAt(0) && myChecks[i] + 6 < 30 && myChecks[i] + 6 > 5) {\r\n              squares[myChecks[i] + 12] = 'V'\r\n              score = 2\r\n            }\r\n          }\r\n          else {\r\n            if (myChecks[i] < 30 && (player === 0 || player === 1)) {\r\n              if (hardmode && myChecks[i] < 18 && squares[myChecks[i] + 12] && squares[myChecks[i] + 18] && squares[myChecks[i]].charAt(0) !== squares[myChecks[i] + 12] && squares[myChecks[i]].charAt(0) !== squares[myChecks[i] + 18]) {\r\n                squares[myChecks[i] + 6] = 'vb'\r\n              } else {\r\n                squares[myChecks[i] + 6] = 'v'\r\n              }\r\n              score = score > 1 ? 2 : 1\r\n            }\r\n          }\r\n\r\n          // Влево\r\n          if (squares[myChecks[i] - 1]) {\r\n            if (squares[myChecks[i] - 2] === null && squares[myChecks[i]].charAt(0) !== squares[myChecks[i] - 1].charAt(0) && Math.floor((myChecks[i] - 2) / 6) === Math.floor(myChecks[i] / 6)) {\r\n              squares[myChecks[i] - 2] = 'V'\r\n              score = 2\r\n            }\r\n          }\r\n          else {\r\n            if (myChecks[i] > 0 && Math.floor((myChecks[i] - 1) / 6) === Math.floor(myChecks[i] / 6) && (player === 1 || player === 2)) {\r\n              if (hardmode && myChecks[i] > 2 && squares[myChecks[i] - 2] && squares[myChecks[i] - 3] && squares[myChecks[i]].charAt(0) !== squares[myChecks[i] - 2] && squares[myChecks[i]].charAt(0) !== squares[myChecks[i] - 3]) {\r\n                squares[myChecks[i] - 1] = 'vb'\r\n              } else {\r\n                squares[myChecks[i] - 1] = 'v'\r\n              }\r\n              score = score > 1 ? 2 : 1\r\n            }\r\n          }\r\n\r\n          // Вверх\r\n          if (squares[myChecks[i] - 6]) {\r\n            if (squares[myChecks[i] - 12] === null && squares[myChecks[i]].charAt(0) !== squares[myChecks[i] - 6].charAt(0) && myChecks[i] - 6 < 30 && myChecks[i] - 6 > 5) {\r\n              squares[myChecks[i] - 12] = 'V'\r\n              score = 2\r\n            }\r\n          }\r\n          else {\r\n            if (myChecks[i] > 5 && (player === 2 || player === 3)) {\r\n              if (myChecks[i] > 17 && squares[myChecks[i] - 12] && squares[myChecks[i] - 18] && squares[myChecks[i]].charAt(0) !== squares[myChecks[i] - 12] && squares[myChecks[i]].charAt(0) !== squares[myChecks[i] - 18]) {\r\n                squares[myChecks[i] - 6] = 'vb'\r\n              } else {\r\n                squares[myChecks[i] - 6] = 'v'\r\n              }\r\n              score = score > 1 ? 2 : 1\r\n            }\r\n          }\r\n        }\r\n\r\n        if (score === 0) {\r\n\r\n          continue\r\n        }\r\n\r\n        let bestMoves = []\r\n        let badMoves = []\r\n\r\n\r\n        for (let j = 0; j < squares.length; j++) {\r\n          if (score === 1 && squares[j] === 'v') {\r\n            bestMoves[bestMoves.length] = j\r\n          }\r\n          if (score === 2 && squares[j] === 'V') {\r\n            bestMoves[bestMoves.length] = j\r\n          }\r\n          if (squares[j] === 'vb') {\r\n            badMoves[badMoves.length] = j\r\n          }\r\n        }\r\n        if (bestMoves.length !== 0) {\r\n          if (score === 2) {\r\n            movesStart[movesStart.length] = myChecks[i]\r\n            movesEnd[movesEnd.length] = bestMoves[Math.floor(Math.random() * bestMoves.length)]\r\n          } else {\r\n            oneScoreStart[oneScoreStart.length] = myChecks[i]\r\n            oneScoreEnd[oneScoreEnd.length] = bestMoves[Math.floor(Math.random() * bestMoves.length)]\r\n          }\r\n        } else {\r\n          if (badMoves.length !== 0) {\r\n            badMovesStart[badMovesStart.length] = myChecks[i]\r\n            badMovesEnd[badMovesEnd.length] = badMoves[Math.floor(Math.random() * badMoves.length)]\r\n          }\r\n        }\r\n\r\n        squares = squares.map(x => x ? (x.toLocaleLowerCase().includes('v') ? null : x) : null)\r\n      }\r\n\r\n      // console.log(oneScoreStart)\r\n      // console.log(oneScoreEnd)\r\n      // console.log(movesStart)\r\n      // console.log(movesEnd)\r\n      // console.log(badMovesStart)\r\n      // console.log(badMovesEnd)\r\n\r\n      // console.log(this.checkMovement(squares,oneScoreStart[0], false))\r\n\r\n      if (movesStart.length > 0) {\r\n        let rnd = Math.floor(Math.random() * movesStart.length)\r\n        squares[movesStart[rnd]] = squares[movesStart[rnd]].toLocaleLowerCase()\r\n        this.setState({\r\n          currentActiveCell: movesStart[rnd],\r\n          currentCheck: squares[movesStart[rnd]].toUpperCase(),\r\n          currentPlayer: player,\r\n          squares: this.checkMovement(squares, movesStart[rnd], false),\r\n          handling: true,\r\n        }, () => {\r\n          let move = this.handleClick(movesEnd[rnd])\r\n          let timerId = setInterval(() => {\r\n            if ((move && move.includes('v'))) {\r\n              move = this.handleClick(move.findIndex(x => x && x === 'v'))\r\n            } else {\r\n              clearInterval(timerId)\r\n            }\r\n          }, 1000);\r\n        })\r\n        console.log(\"[\" + player + \"] AI HAS MADE A GOOD MOVE\")\r\n        return\r\n      }\r\n      if (oneScoreStart.length > 0) {\r\n        let rnd = Math.floor(Math.random() * oneScoreStart.length)\r\n        squares[oneScoreStart[rnd]] = squares[oneScoreStart[rnd]].toLocaleLowerCase()\r\n        this.setState({\r\n          currentActiveCell: oneScoreStart[rnd],\r\n          currentCheck: squares[oneScoreStart[rnd]].toUpperCase(),\r\n          currentPlayer: player,\r\n          squares: this.checkMovement(squares, oneScoreStart[rnd], false),\r\n          handling: true,\r\n        }, () => this.handleClick(oneScoreEnd[rnd]))\r\n        console.log(\"[\" + player + \"] AI HAS MADE A NORMAL MOVE\")\r\n        return\r\n      }\r\n      if (badMovesStart.length > 0) {\r\n        let rnd = Math.floor(Math.random() * badMovesStart.length)\r\n        squares[badMovesStart[rnd]] = squares[badMovesStart[rnd]].toLocaleLowerCase()\r\n        this.setState({\r\n          currentActiveCell: badMovesStart[rnd],\r\n          currentCheck: squares[badMovesStart[rnd]].toUpperCase(),\r\n          currentPlayer: player,\r\n          squares: this.checkMovement(squares, badMovesStart[rnd], false),\r\n          handling: true,\r\n        }, () => this.handleClick(badMovesEnd[rnd]))\r\n        console.log(\"[\" + player + \"] AI WAS DESPERATE TO MAKE A BAD MOVE\")\r\n        return\r\n      }\r\n\r\n      console.log(\"[\" + player + \"] AI CANT MOVE\")\r\n      this.skipTurn()\r\n\r\n    }, 1000)\r\n  }\r\n\r\n  handleClick(i) {\r\n    if (this.state.online && this.state.currentSocketId !== this.state.thisSocketId || this.state.ended) {\r\n      return\r\n    }\r\n\r\n    // // Доска\r\n    let squares = this.state.squares\r\n    // Если тыкнули на пустую клетку\r\n    if (!squares[i]) {\r\n      return\r\n    }\r\n\r\n    // Если игрок еще не выбрал шашку и тыкнул на одну из своих\r\n    if (squares[i].charAt(0) === this.playerNames[this.state.currentPlayer % 4] && !this.state.handling) {\r\n      this.setState({\r\n        currentCheck: squares[i],\r\n      }, () => this.logEverything())\r\n      // Хайлайтим ходы для выбранной шашки\r\n      squares[i] = squares[i].toLocaleLowerCase()\r\n      squares = this.checkMovement(squares, i, false)\r\n      this.setState({\r\n        currentActiveCell: i,\r\n        handling: true,\r\n        squares: squares\r\n      }, () => this.logEverything())\r\n\r\n\r\n    } else {\r\n      // Если игрок уже тыкал на другую шашку и хочет ее сменить, при этом не ходя предыдущей\r\n      if (!this.state.lock && this.state.handling && squares[i].charAt(0) === squares[this.state.currentActiveCell].charAt(0).toUpperCase()) {\r\n        // Возвращаем предыдущую к состоянию до хайлайтов\r\n        squares = this.reverseSelection(squares)\r\n\r\n        // Запоминаем новую шашку\r\n        this.setState({\r\n          currentActiveCell: i,\r\n          currentCheck: squares[i],\r\n          handling: true,\r\n          squares: squares\r\n        }, () => this.logEverything())\r\n\r\n        // Смотрим возможные ходы для новой\r\n        squares[i] = squares[i].toLocaleLowerCase()\r\n        squares = this.checkMovement(squares, i, false)\r\n      }\r\n    }\r\n\r\n    // Если игрок выбрал шашку и тыкнул в один из хайлайтов\r\n    if (this.state.handling && squares[i] === 'v') {\r\n      // Заменяем хайлайт на выбранную шашку\r\n      squares[i] = this.state.currentCheck\r\n\r\n      // Смотрим, можно ли продолжить ход, также удаляем фишки, стоявшие на пути игрока\r\n      let resume = false\r\n      let eaten = false\r\n      if (this.state.currentActiveCell % 6 < i % 6 && Math.abs(this.state.currentActiveCell - i) > 1) {\r\n        if (squares[i - 1] !== 'v') {\r\n          eaten = true\r\n          squares[i - 1] = null\r\n        }\r\n        resume = true\r\n      }\r\n      if (Math.floor(this.state.currentActiveCell / 6) < Math.floor(i / 6) && this.state.currentActiveCell % 6 === i % 6 && Math.abs(this.state.currentActiveCell - i) > 6) {\r\n        if (squares[i - 6] !== 'v') {\r\n          eaten = true\r\n          squares[i - 6] = null\r\n        }\r\n        resume = true\r\n      }\r\n      if (this.state.currentActiveCell % 6 > i % 6 && Math.abs(this.state.currentActiveCell - i) > 1) {\r\n        if (squares[i + 1] !== 'v') {\r\n          eaten = true\r\n          squares[i + 1] = null\r\n        }\r\n        resume = true\r\n      }\r\n      if (Math.floor(this.state.currentActiveCell / 6) > Math.floor(i / 6) && this.state.currentActiveCell % 6 === i % 6 && Math.abs(this.state.currentActiveCell - i) > 6) {\r\n        if (squares[i + 6] !== 'v') {\r\n          eaten = true\r\n          squares[i + 6] = null\r\n        }\r\n        resume = true\r\n      }\r\n\r\n      // Смотрим, можно ли сделать из шашки дамку\r\n      squares = this.makeQueen(this.validate(squares), i)\r\n\r\n      // На всякий запоминаем положение доски и скидываем лок на выбор другой шашки\r\n      this.setState({\r\n        squares: squares,\r\n        handling: false,\r\n        lock: false,\r\n      }, () => this.logEverything())\r\n\r\n\r\n      // Если можно продолжить\r\n      if (eaten && resume && this.canResume(squares, i, this.state.currentCheck)) {\r\n        // Хайлайтим возможные ходы\r\n        squares = this.checkMovement(squares, i, true)\r\n        this.setState({\r\n          currentCheck: squares[i],\r\n        })\r\n        squares[i] = squares[i].toLocaleLowerCase()\r\n        this.setState({\r\n          squares: squares,\r\n          currentPlayer: this.state.currentPlayer,\r\n          handling: true,\r\n          currentActiveCell: i,\r\n          lock: true,\r\n        }, () => this.logEverything())\r\n\r\n      } else {\r\n        // Если продолжить нельзя\r\n        this.chechAlive(squares)\r\n        this.setState({\r\n          squares: this.skipTurn(squares)\r\n        }, () => this.logEverything())\r\n\r\n\r\n      }\r\n    }\r\n    return squares\r\n    // this.chechAlive(squares)\r\n\r\n  }\r\n\r\n  chechAlive(squares) {\r\n    let ded = this.state.dead\r\n    for (let p = 0; p < 4; p++) {\r\n      let playerDead = true\r\n      for (let i = 0; i < 36; i++) {\r\n        if (squares[i] && squares[i].charAt(0).toUpperCase() === this.playerNames[p]) {\r\n          playerDead = false\r\n        }\r\n      }\r\n      ded[p] = playerDead\r\n    }\r\n    this.setState({\r\n      dead: ded,\r\n    }, () => this.logEverything())\r\n  }\r\n\r\n  // Смотрим, можно ли создать дамку\r\n  makeQueen(squares, i) {\r\n    // Если шашка уже дамка\r\n    if (this.state.currentCheck.length !== 1) {\r\n      return squares\r\n    }\r\n    // Смотрим на углы поля\r\n    switch (this.state.currentCheck) {\r\n      case this.playerNames[0]: {\r\n        if (i == 35) {\r\n          squares[35] = this.state.currentCheck + \"Q\"\r\n        }\r\n\r\n        break\r\n      }\r\n      case this.playerNames[1]: {\r\n        if (i == 30) {\r\n          squares[30] = this.state.currentCheck + \"Q\"\r\n        }\r\n        break\r\n      }\r\n      case this.playerNames[2]: {\r\n        if (i == 0) {\r\n          squares[0] = this.state.currentCheck + \"Q\"\r\n        }\r\n        break\r\n      }\r\n      case this.playerNames[3]: {\r\n        if (i == 5) {\r\n          squares[5] = this.state.currentCheck + \"Q\"\r\n        }\r\n        break\r\n      }\r\n    }\r\n    // Возвращаем обработанную доску\r\n    return squares\r\n  }\r\n\r\n  // Смотрим, можно ли кого-нибудь съесть с нынешним расположением шашки игрока\r\n  canResume(squares, i, check) {\r\n    let left = true, right = true, up = true, down = true\r\n\r\n    // Проверяем положение шашки на поле\r\n    if (i < 5) {\r\n      up = false\r\n    }\r\n    if (i > 28) {\r\n      down = false\r\n    }\r\n    if ((i % 6) < 2) {\r\n      left = false\r\n    }\r\n    if ((i % 6) > 3) {\r\n      right = false\r\n    }\r\n\r\n    // Проверяем возможность захавать шашку противника \r\n    if (!(up && squares[i - 6] && squares[i - 6].charAt(0) !== check.charAt(0) && squares[i - 12] === null)) {\r\n      up = false\r\n    }\r\n    if (!(down && squares[i + 6] && squares[i + 6].charAt(0) !== check.charAt(0) && squares[i + 12] === null)) {\r\n      down = false\r\n    }\r\n    if (!(left && squares[i - 1] && squares[i - 1].charAt(0) !== check.charAt(0) && squares[i - 2] === null)) {\r\n      left = false\r\n    }\r\n    if (!(right && squares[i + 1] && squares[i + 1].charAt(0) !== check.charAt(0) && squares[i + 2] === null)) {\r\n      right = false\r\n    }\r\n    return (up || down || right || left)\r\n  }\r\n\r\n  // Убираем все хайлайты\r\n  // returns : игровое поле\r\n  validate(squares) {\r\n    return squares.map(x => x ? (x !== x.toLocaleLowerCase() ? x : null) : null)\r\n  }\r\n\r\n  // Обработка ситуации, когда игрок решил сдаться\r\n  giveUp() {\r\n    let ded = this.state.dead\r\n    ded[this.state.currentPlayer % 4] = true\r\n    this.setState({\r\n      dead: ded,\r\n      squares: this.state.squares.map(x => x ? (x.charAt(0).toUpperCase() === this.playerNames[this.state.currentPlayer % 4] ? null : x) : null)\r\n    }, () => {\r\n      this.logEverything()\r\n      this.skipTurn()\r\n    })\r\n  }\r\n\r\n  // Переадресация хода на следующего игрока\r\n  // returns : игровое поле\r\n  skipTurn(squares) {\r\n    let turn = this.state.currentPlayer\r\n    let winner = false;\r\n\r\n    for (let i = 1; i < 4; i++) {\r\n      if (!this.state.dead[(this.state.currentPlayer + i) % 4]) {\r\n        turn = i + this.state.currentPlayer\r\n        break\r\n      }\r\n    }\r\n    let deadMeat = true, deadAI = true\r\n    for (let i = 0; i < 4; i++) {\r\n      if (!this.state.dead[i]) {\r\n        if (this.state.meat[i]) {\r\n          deadMeat = false\r\n        } else {\r\n          deadAI = false\r\n        }\r\n      }\r\n    }\r\n    if (this.state.manCoop) {\r\n      console.log(\"MEAT: \" + deadMeat + \" AI: \" + deadAI)\r\n    }\r\n    if (turn === this.state.currentPlayer || (this.state.manCoop && (deadAI || deadMeat))) {\r\n      this.gameOver(\"Game Over\")\r\n    }\r\n\r\n    this.setState({\r\n      currentPlayer: turn\r\n    }, () => {\r\n      this.logEverything()\r\n      if (!this.state.meat[turn % 4]) {\r\n        this.useSkynet()\r\n      }\r\n    })\r\n\r\n    if (squares) {\r\n      return this.reverseSelection(squares)\r\n    } else {\r\n      this.setState({\r\n        handling: false,\r\n        squares: this.validate(this.reverseSelection(this.state.squares))\r\n      }, () => this.logEverything())\r\n    }\r\n  }\r\n\r\n  // Отмена выбора шашки персонажа и очистка хайлайтов\r\n  // returns : игровое поле\r\n  reverseSelection(squares) {\r\n    return squares.map(x => x ? x.toUpperCase() : null).map(x => x === 'V' ? null : x)\r\n  }\r\n\r\n\r\n  // Выставляем хайлайты для шашек\r\n  // returns : игровое поле\r\n  checkMovement(squares, i, lock) {\r\n    // Достаем полный номинал выбранной игроком шашки\r\n    let check = squares[i].toUpperCase()\r\n    // Смотрим, является ли она дамкой\r\n    if (check.endsWith('Q')) {\r\n      // Влево\r\n      for (let q = i - 1; q >= Math.floor(i / 6) * 6; q--) {\r\n        if (squares[q] !== null) {\r\n          if (squares[q].charAt(0) !== check.charAt(0) && squares[q - 1] === null && q !== Math.floor(i % 6) * 6) {\r\n            squares[q - 1] = 'v'\r\n          }\r\n          break\r\n        } else {\r\n          squares[q] = 'v'\r\n        }\r\n      }\r\n      // Вправо\r\n      for (let q = i + 1; q <= Math.floor(i / 6) * 6 + 5; q++) {\r\n        if (squares[q] !== null) {\r\n          if (squares[q].charAt(0) !== check.charAt(0) && squares[q + 1] === null && q !== Math.floor(i % 6) * 6 + 5) {\r\n            squares[q + 1] = 'v'\r\n          }\r\n          break\r\n        } else {\r\n          squares[q] = 'v'\r\n        }\r\n      }\r\n      // Вверх\r\n      for (let q = i - 6; q > 0; q -= 6) {\r\n        if (squares[q] !== null) {\r\n          if (squares[q].charAt(0) !== check.charAt(0) && squares[q - 6] === null && q !== i % 6) {\r\n            squares[q - 6] = 'v'\r\n          }\r\n          break\r\n        } else {\r\n          squares[q] = 'v'\r\n        }\r\n      }\r\n      // Вниз\r\n      for (let q = i + 6; q < 36; q += 6) {\r\n        if (squares[q] !== null) {\r\n          if (squares[q].charAt(0) !== check.charAt(0) && squares[q + 6] === null && q !== 30 + i % 6) {\r\n            squares[q + 6] = 'v'\r\n          }\r\n          break\r\n        } else {\r\n          squares[q] = 'v'\r\n        }\r\n      }\r\n\r\n    } else {\r\n      // Вправо\r\n      if (squares[i + 1]) {\r\n        if (squares[i + 2] === null && check.charAt(0) !== squares[i + 1].charAt(0) && Math.floor((i + 2) / 6) === Math.floor(i / 6)) {\r\n          squares[i + 2] = 'v'\r\n        }\r\n      }\r\n      else {\r\n        if (!lock && i < 35 && Math.floor((i + 1) / 6) === Math.floor(i / 6) && (this.state.currentPlayer % 4 === 0 || this.state.currentPlayer % 4 === 3))\r\n          squares[i + 1] = 'v'\r\n      }\r\n\r\n      // Вниз\r\n      if (squares[i + 6]) {\r\n        if (squares[i + 12] === null && check.charAt(0) !== squares[i + 6].charAt(0) && i + 6 < 30 && i + 6 > 5) {\r\n          squares[i + 12] = 'v'\r\n        }\r\n      }\r\n      else {\r\n        if (!lock && i < 30 && (this.state.currentPlayer % 4 === 0 || this.state.currentPlayer % 4 === 1))\r\n          squares[i + 6] = 'v'\r\n      }\r\n\r\n      // Влево\r\n      if (squares[i - 1]) {\r\n        if (squares[i - 2] === null && check.charAt(0) !== squares[i - 1].charAt(0) && Math.floor((i - 2) / 6) === Math.floor(i / 6)) {\r\n          squares[i - 2] = 'v'\r\n        }\r\n      }\r\n      else {\r\n        if (!lock && i > 0 && Math.floor((i - 1) / 6) === Math.floor(i / 6) && (this.state.currentPlayer % 4 === 1 || this.state.currentPlayer % 4 === 2))\r\n          squares[i - 1] = 'v'\r\n      }\r\n\r\n      // Вверх\r\n      if (squares[i - 6]) {\r\n        if (squares[i - 12] === null && check.charAt(0) !== squares[i - 6].charAt(0) && i - 6 < 30 && i - 6 > 5) {\r\n          squares[i - 12] = 'v'\r\n        }\r\n      }\r\n      else {\r\n        if (!lock && i > 5 && (this.state.currentPlayer % 4 === 2 || this.state.currentPlayer % 4 === 3))\r\n          squares[i - 6] = 'v'\r\n      }\r\n    }\r\n\r\n    return squares\r\n  }\r\n\r\n  // https://youtu.be/3hx9d45i1Gs\r\n  generateBullscheisse() {\r\n    let d = new Date().getTime()\r\n    let d2 = (performance && performance.now && (performance.now() * 1000)) || 0;\r\n    return 'xxxxxxxx-xxxx-4xxx'.replace(/[xy]/g, c => {\r\n      let r = Math.random() * 16;\r\n      if (d > 0) {\r\n        r = (d + r) % 16 | 0;\r\n        d = Math.floor(d / 16);\r\n      } else {\r\n        r = (d2 + r) % 16 | 0;\r\n        d2 = Math.floor(d2 / 16);\r\n      }\r\n      return (c == 'x' ? r : (r & 0x7 | 0x8)).toString(16);\r\n    });\r\n  }\r\n\r\n  denyDialog() {\r\n    this.acceptDialog(this.generateBullscheisse())\r\n  }\r\n\r\n  acceptDialog(input) {\r\n    this.state.socket.emit('handshake', { \"name\": input })\r\n    this.setState({\r\n      thisSocketId: input,\r\n      activeDialog: false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n      {/* Форма для ввода имени */}\r\n        {this.state.online && <DialogInput isDialogVisible={this.state.activeDialog}\r\n          title={\"How would you like to be called\"}\r\n          hintInput={\"Oleg Gazmanov\"}\r\n          submitInput={(inputText) => this.acceptDialog(inputText)}\r\n          closeDialog={() => this.denyDialog()}>\r\n        </DialogInput>\r\n        }\r\n\r\n        {(this.state.online || this.state.spectator) && <View style={styles.info}>\r\n          <Text style={styles.text}>{this.state.text}</Text>\r\n        </View>\r\n        }\r\n        {(!this.state.waiting) && <View className=\"game-board\">\r\n          {setBackground(this.state.currentPlayer)}\r\n          <Board\r\n            squares={this.state.squares}\r\n            onClick={i => this.handleClick(i)}\r\n          />\r\n        </View>\r\n        }\r\n        <View className=\"game-info\" style={{ flexDirection: 'row' }}>\r\n          {(!this.state.spectator && !this.state.waiting) && <TouchableOpacity onPress={() => this.giveUp()} style={styles.button} disabled={this.state.disableButtons} >\r\n            <Text style={styles.text}>Quit Game</Text>\r\n          </TouchableOpacity>\r\n          }\r\n\r\n          {(!this.state.spectator && !this.state.waiting) && <TouchableOpacity onPress={() => this.skipTurn(null)} style={styles.button} disabled={this.state.disableButtons}>\r\n            <Text style={styles.text}>Skip Turn</Text>\r\n          </TouchableOpacity>\r\n          }\r\n\r\n          {!this.state.online && <TouchableOpacity onPress={() => this.reset()} style={styles.imageButton} disabled={this.state.disableButtons}>\r\n            <Image style={{ flex: 1, alignContent: 'center', width: 40, height: undefined, resizeMode: 'contain', }} source={require('./refresh.png')} />\r\n          </TouchableOpacity>\r\n          }\r\n        </View>\r\n      </>\r\n    );\r\n  }\r\n}\r\nfunction setBackground(params) {\r\n  switch (params % 4) {\r\n    case 0:\r\n      return <View style={[styles.turnBackground, { backgroundColor: 'rgba(255,255,255,1)', }]}></View>\r\n\r\n    case 1:\r\n      return <View style={[styles.turnBackground, { backgroundColor: 'rgba(255,0,0,1)', }]}></View>\r\n\r\n    case 2:\r\n      return <View style={[styles.turnBackground, { backgroundColor: 'rgba(0,255,0,1)', }]}></View>\r\n\r\n    case 3:\r\n      return <View style={[styles.turnBackground, { backgroundColor: 'rgba(50,50,50,1)' }]}></View>\r\n\r\n    default:\r\n      return <View></View>;\r\n  }\r\n  return <View style={{ position: 'absolute', width: '400px', height: '400px', margin: '0px', backgroundColor: {}, }}></View>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  turnBackground: {\r\n    position: 'absolute',\r\n    width: 345,\r\n    height: 345,\r\n    margin: 0\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    margin: 8,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 24,\r\n    borderRadius: 4,\r\n    elevation: 3,\r\n    backgroundColor: 'black',\r\n  },\r\n  info: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    margin: 10,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 28,\r\n    borderRadius: 4,\r\n    elevation: 3,\r\n    backgroundColor: 'black',\r\n    opacity: 0.6\r\n  },\r\n  imageButton: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    margin: 10,\r\n    padding: 5,\r\n    borderRadius: 4,\r\n    elevation: 3,\r\n    backgroundColor: 'black',\r\n  },\r\n  text: {\r\n    fontSize: 16,\r\n    lineHeight: 21,\r\n    fontWeight: 'bold',\r\n    letterSpacing: 0.25,\r\n    color: 'white',\r\n  },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}